#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.18444
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FiasUpdater.DataModel
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FIAS")]
	public partial class FiasDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertActualStatus(ActualStatus instance);
    partial void UpdateActualStatus(ActualStatus instance);
    partial void DeleteActualStatus(ActualStatus instance);
    partial void InsertStructureStatuses(StructureStatuses instance);
    partial void UpdateStructureStatuses(StructureStatuses instance);
    partial void DeleteStructureStatuses(StructureStatuses instance);
    partial void InsertAddressObjects(AddressObjects instance);
    partial void UpdateAddressObjects(AddressObjects instance);
    partial void DeleteAddressObjects(AddressObjects instance);
    partial void InsertAddressObjectsAllKey(AddressObjectsAllKey instance);
    partial void UpdateAddressObjectsAllKey(AddressObjectsAllKey instance);
    partial void DeleteAddressObjectsAllKey(AddressObjectsAllKey instance);
    partial void InsertAddressObjectTypes(AddressObjectTypes instance);
    partial void UpdateAddressObjectTypes(AddressObjectTypes instance);
    partial void DeleteAddressObjectTypes(AddressObjectTypes instance);
    partial void InsertCenterStatuses(CenterStatuses instance);
    partial void UpdateCenterStatuses(CenterStatuses instance);
    partial void DeleteCenterStatuses(CenterStatuses instance);
    partial void InsertCurrentStatuses(CurrentStatuses instance);
    partial void UpdateCurrentStatuses(CurrentStatuses instance);
    partial void DeleteCurrentStatuses(CurrentStatuses instance);
    partial void InsertDellAddressObjects(DellAddressObjects instance);
    partial void UpdateDellAddressObjects(DellAddressObjects instance);
    partial void DeleteDellAddressObjects(DellAddressObjects instance);
    partial void InsertDellHouseIntervals(DellHouseIntervals instance);
    partial void UpdateDellHouseIntervals(DellHouseIntervals instance);
    partial void DeleteDellHouseIntervals(DellHouseIntervals instance);
    partial void InsertDellHouses(DellHouses instance);
    partial void UpdateDellHouses(DellHouses instance);
    partial void DeleteDellHouses(DellHouses instance);
    partial void InsertDellNormativeDocument(DellNormativeDocument instance);
    partial void UpdateDellNormativeDocument(DellNormativeDocument instance);
    partial void DeleteDellNormativeDocument(DellNormativeDocument instance);
    partial void InsertEstateStatuses(EstateStatuses instance);
    partial void UpdateEstateStatuses(EstateStatuses instance);
    partial void DeleteEstateStatuses(EstateStatuses instance);
    partial void InsertHouseIntervals(HouseIntervals instance);
    partial void UpdateHouseIntervals(HouseIntervals instance);
    partial void DeleteHouseIntervals(HouseIntervals instance);
    partial void InsertHouses(Houses instance);
    partial void UpdateHouses(Houses instance);
    partial void DeleteHouses(Houses instance);
    partial void InsertHouseStateStatuses(HouseStateStatuses instance);
    partial void UpdateHouseStateStatuses(HouseStateStatuses instance);
    partial void DeleteHouseStateStatuses(HouseStateStatuses instance);
    partial void InsertIntervalStatuses(IntervalStatuses instance);
    partial void UpdateIntervalStatuses(IntervalStatuses instance);
    partial void DeleteIntervalStatuses(IntervalStatuses instance);
    partial void InsertLandmarks(Landmarks instance);
    partial void UpdateLandmarks(Landmarks instance);
    partial void DeleteLandmarks(Landmarks instance);
    partial void InsertNormativeDocument(NormativeDocument instance);
    partial void UpdateNormativeDocument(NormativeDocument instance);
    partial void DeleteNormativeDocument(NormativeDocument instance);
    partial void InsertNormativeDocumentTypes(NormativeDocumentTypes instance);
    partial void UpdateNormativeDocumentTypes(NormativeDocumentTypes instance);
    partial void DeleteNormativeDocumentTypes(NormativeDocumentTypes instance);
    partial void InsertOperationStatuses(OperationStatuses instance);
    partial void UpdateOperationStatuses(OperationStatuses instance);
    partial void DeleteOperationStatuses(OperationStatuses instance);
    #endregion
		
		public FiasDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FiasDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FiasDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FiasDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ActualStatus> ActualStatus
		{
			get
			{
				return this.GetTable<ActualStatus>();
			}
		}
		
		public System.Data.Linq.Table<StructureStatuses> StructureStatuses
		{
			get
			{
				return this.GetTable<StructureStatuses>();
			}
		}
		
		public System.Data.Linq.Table<AddressObjects> AddressObjects
		{
			get
			{
				return this.GetTable<AddressObjects>();
			}
		}
		
		public System.Data.Linq.Table<AddressObjectsAllKey> AddressObjectsAllKey
		{
			get
			{
				return this.GetTable<AddressObjectsAllKey>();
			}
		}
		
		public System.Data.Linq.Table<AddressObjectTypes> AddressObjectTypes
		{
			get
			{
				return this.GetTable<AddressObjectTypes>();
			}
		}
		
		public System.Data.Linq.Table<CenterStatuses> CenterStatuses
		{
			get
			{
				return this.GetTable<CenterStatuses>();
			}
		}
		
		public System.Data.Linq.Table<CurrentStatuses> CurrentStatuses
		{
			get
			{
				return this.GetTable<CurrentStatuses>();
			}
		}
		
		public System.Data.Linq.Table<DellAddressObjects> DellAddressObjects
		{
			get
			{
				return this.GetTable<DellAddressObjects>();
			}
		}
		
		public System.Data.Linq.Table<DellHouseIntervals> DellHouseIntervals
		{
			get
			{
				return this.GetTable<DellHouseIntervals>();
			}
		}
		
		public System.Data.Linq.Table<DellHouses> DellHouses
		{
			get
			{
				return this.GetTable<DellHouses>();
			}
		}
		
		public System.Data.Linq.Table<DellNormativeDocument> DellNormativeDocument
		{
			get
			{
				return this.GetTable<DellNormativeDocument>();
			}
		}
		
		public System.Data.Linq.Table<EstateStatuses> EstateStatuses
		{
			get
			{
				return this.GetTable<EstateStatuses>();
			}
		}
		
		public System.Data.Linq.Table<HouseIntervals> HouseIntervals
		{
			get
			{
				return this.GetTable<HouseIntervals>();
			}
		}
		
		public System.Data.Linq.Table<Houses> Houses
		{
			get
			{
				return this.GetTable<Houses>();
			}
		}
		
		public System.Data.Linq.Table<HouseStateStatuses> HouseStateStatuses
		{
			get
			{
				return this.GetTable<HouseStateStatuses>();
			}
		}
		
		public System.Data.Linq.Table<IntervalStatuses> IntervalStatuses
		{
			get
			{
				return this.GetTable<IntervalStatuses>();
			}
		}
		
		public System.Data.Linq.Table<Landmarks> Landmarks
		{
			get
			{
				return this.GetTable<Landmarks>();
			}
		}
		
		public System.Data.Linq.Table<NormativeDocument> NormativeDocument
		{
			get
			{
				return this.GetTable<NormativeDocument>();
			}
		}
		
		public System.Data.Linq.Table<NormativeDocumentTypes> NormativeDocumentTypes
		{
			get
			{
				return this.GetTable<NormativeDocumentTypes>();
			}
		}
		
		public System.Data.Linq.Table<OperationStatuses> OperationStatuses
		{
			get
			{
				return this.GetTable<OperationStatuses>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DELFROM")]
		public int DELFROM()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddressObjects_INSERT")]
		public int AddressObjects_INSERT(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _AOID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _AOGUID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _PARENTGUID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _NEXTID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _PREVID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(120)")] string _FORMALNAME, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _REGIONCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _AUTOCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _AREACODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _CITYCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _CTARCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _PLACECODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _STREETCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _EXTRCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _SEXTCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(120)")] string _OFFNAME, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _POSTALCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _IFNSFL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _TERRIFNSFL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _IFNSUL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _TERRIFNSUL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(11)")] string _OKATO, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _OKTMO, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _UPDATEDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string _SHORTNAME, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _AOLEVEL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(17)")] string _CODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(15)")] string _PLAINCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _ACTSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _CENTSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _OPERSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _CURRSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _STARTDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _ENDDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _NORMDOC, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> _LIVESTATUS)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _AOID, _AOGUID, _PARENTGUID, _NEXTID, _PREVID, _FORMALNAME, _REGIONCODE, _AUTOCODE, _AREACODE, _CITYCODE, _CTARCODE, _PLACECODE, _STREETCODE, _EXTRCODE, _SEXTCODE, _OFFNAME, _POSTALCODE, _IFNSFL, _TERRIFNSFL, _IFNSUL, _TERRIFNSUL, _OKATO, _OKTMO, _UPDATEDATE, _SHORTNAME, _AOLEVEL, _CODE, _PLAINCODE, _ACTSTATUS, _CENTSTATUS, _OPERSTATUS, _CURRSTATUS, _STARTDATE, _ENDDATE, _NORMDOC, _LIVESTATUS);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.HouseIntervals_INSERT")]
		public int HouseIntervals_INSERT(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _HOUSEINTID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _INTGUID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _AOGUID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _POSTALCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _IFNSFL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _TERRIFNSFL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _IFNSUL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _TERRIFNSUL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(11)")] string _OKATO, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _OKTMO, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _UPDATEDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _INTSTART, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _INTEND, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _STARTDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _ENDDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _INTSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _NORMDOC, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _COUNTER)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _HOUSEINTID, _INTGUID, _AOGUID, _POSTALCODE, _IFNSFL, _TERRIFNSFL, _IFNSUL, _TERRIFNSUL, _OKATO, _OKTMO, _UPDATEDATE, _INTSTART, _INTEND, _STARTDATE, _ENDDATE, _INTSTATUS, _NORMDOC, _COUNTER);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Houses_INSERT")]
		public int Houses_INSERT(
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _HOUSEID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _AOGUID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _HOUSEGUID, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(6)")] string _POSTALCODE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(4)")] string _IFNSFL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(4)")] string _TERRIFNSFL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(4)")] string _IFNSUL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(4)")] string _TERRIFNSUL, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(11)")] string _OKATO, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Char(8)")] string _OKTMO, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _UPDATEDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(20)")] string _HOUSENUM, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="TinyInt")] System.Nullable<byte> _ESTSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string _BUILDNUM, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(10)")] string _STRUCNUM, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _STRSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _STARTDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _ENDDATE, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _STATSTATUS, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> _COUNTER, 
					[global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _NORMDOC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _HOUSEID, _AOGUID, _HOUSEGUID, _POSTALCODE, _IFNSFL, _TERRIFNSFL, _IFNSUL, _TERRIFNSUL, _OKATO, _OKTMO, _UPDATEDATE, _HOUSENUM, _ESTSTATUS, _BUILDNUM, _STRUCNUM, _STRSTATUS, _STARTDATE, _ENDDATE, _STATSTATUS, _COUNTER, _NORMDOC);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.Landmarks_INSERT")]
		public int Landmarks_INSERT([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _LANDID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _LANDGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _AOGUID, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string _LOCATION, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _POSTALCODE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _IFNSFL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _TERRIFNSFL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _IFNSUL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _TERRIFNSUL, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(11)")] string _OKATO, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NChar(10)")] string _OKTMO, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _UPDATEDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _STARTDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> _ENDDATE, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="UniqueIdentifier")] System.Nullable<System.Guid> _NORMDOC)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), _LANDID, _LANDGUID, _AOGUID, _LOCATION, _POSTALCODE, _IFNSFL, _TERRIFNSFL, _IFNSUL, _TERRIFNSUL, _OKATO, _OKTMO, _UPDATEDATE, _STARTDATE, _ENDDATE, _NORMDOC);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ActualStatus")]
	public partial class ActualStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ACTSTATID;
		
		private string _NAME;
		
		private EntitySet<AddressObjects> _AddressObjects;
		
		private EntitySet<DellAddressObjects> _DellAddressObjects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnACTSTATIDChanging(int value);
    partial void OnACTSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public ActualStatus()
		{
			this._AddressObjects = new EntitySet<AddressObjects>(new Action<AddressObjects>(this.attach_AddressObjects), new Action<AddressObjects>(this.detach_AddressObjects));
			this._DellAddressObjects = new EntitySet<DellAddressObjects>(new Action<DellAddressObjects>(this.attach_DellAddressObjects), new Action<DellAddressObjects>(this.detach_DellAddressObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ACTSTATID
		{
			get
			{
				return this._ACTSTATID;
			}
			set
			{
				if ((this._ACTSTATID != value))
				{
					this.OnACTSTATIDChanging(value);
					this.SendPropertyChanging();
					this._ACTSTATID = value;
					this.SendPropertyChanged("ACTSTATID");
					this.OnACTSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActualStatus_AddressObjects", Storage="_AddressObjects", ThisKey="ACTSTATID", OtherKey="ACTSTATUS")]
		public EntitySet<AddressObjects> AddressObjects
		{
			get
			{
				return this._AddressObjects;
			}
			set
			{
				this._AddressObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActualStatus_DellAddressObjects", Storage="_DellAddressObjects", ThisKey="ACTSTATID", OtherKey="ACTSTATUS")]
		public EntitySet<DellAddressObjects> DellAddressObjects
		{
			get
			{
				return this._DellAddressObjects;
			}
			set
			{
				this._DellAddressObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.ActualStatus = this;
		}
		
		private void detach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.ActualStatus = null;
		}
		
		private void attach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.ActualStatus = this;
		}
		
		private void detach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.ActualStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StructureStatuses")]
	public partial class StructureStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STRSTATID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
		private EntitySet<DellHouses> _DellHouses;
		
		private EntitySet<Houses> _Houses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTRSTATIDChanging(int value);
    partial void OnSTRSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    #endregion
		
		public StructureStatuses()
		{
			this._DellHouses = new EntitySet<DellHouses>(new Action<DellHouses>(this.attach_DellHouses), new Action<DellHouses>(this.detach_DellHouses));
			this._Houses = new EntitySet<Houses>(new Action<Houses>(this.attach_Houses), new Action<Houses>(this.detach_Houses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STRSTATID
		{
			get
			{
				return this._STRSTATID;
			}
			set
			{
				if ((this._STRSTATID != value))
				{
					this.OnSTRSTATIDChanging(value);
					this.SendPropertyChanging();
					this._STRSTATID = value;
					this.SendPropertyChanged("STRSTATID");
					this.OnSTRSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="NChar(20)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructureStatuses_DellHouses", Storage="_DellHouses", ThisKey="STRSTATID", OtherKey="STRSTATUS")]
		public EntitySet<DellHouses> DellHouses
		{
			get
			{
				return this._DellHouses;
			}
			set
			{
				this._DellHouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructureStatuses_Houses", Storage="_Houses", ThisKey="STRSTATID", OtherKey="STRSTATUS")]
		public EntitySet<Houses> Houses
		{
			get
			{
				return this._Houses;
			}
			set
			{
				this._Houses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.StructureStatuses = this;
		}
		
		private void detach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.StructureStatuses = null;
		}
		
		private void attach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.StructureStatuses = this;
		}
		
		private void detach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.StructureStatuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressObjects")]
	public partial class AddressObjects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AOID;
		
		private System.Guid _AOGUID;
		
		private System.Nullable<System.Guid> _PARENTGUID;
		
		private System.Nullable<System.Guid> _NEXTID;
		
		private System.Nullable<System.Guid> _PREVID;
		
		private string _FORMALNAME;
		
		private string _REGIONCODE;
		
		private string _AUTOCODE;
		
		private string _AREACODE;
		
		private string _CITYCODE;
		
		private string _CTARCODE;
		
		private string _PLACECODE;
		
		private string _STREETCODE;
		
		private string _EXTRCODE;
		
		private string _SEXTCODE;
		
		private string _OFFNAME;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _SHORTNAME;
		
		private int _AOLEVEL;
		
		private string _CODE;
		
		private string _PLAINCODE;
		
		private int _ACTSTATUS;
		
		private int _CENTSTATUS;
		
		private int _OPERSTATUS;
		
		private int _CURRSTATUS;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private bool _LIVESTATUS;
		
		private EntityRef<ActualStatus> _ActualStatus;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
		private EntityRef<CenterStatuses> _CenterStatuses;
		
		private EntityRef<CurrentStatuses> _CurrentStatuses;
		
		private EntityRef<OperationStatuses> _OperationStatuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAOIDChanging(System.Guid value);
    partial void OnAOIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnPARENTGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPARENTGUIDChanged();
    partial void OnNEXTIDChanging(System.Nullable<System.Guid> value);
    partial void OnNEXTIDChanged();
    partial void OnPREVIDChanging(System.Nullable<System.Guid> value);
    partial void OnPREVIDChanged();
    partial void OnFORMALNAMEChanging(string value);
    partial void OnFORMALNAMEChanged();
    partial void OnREGIONCODEChanging(string value);
    partial void OnREGIONCODEChanged();
    partial void OnAUTOCODEChanging(string value);
    partial void OnAUTOCODEChanged();
    partial void OnAREACODEChanging(string value);
    partial void OnAREACODEChanged();
    partial void OnCITYCODEChanging(string value);
    partial void OnCITYCODEChanged();
    partial void OnCTARCODEChanging(string value);
    partial void OnCTARCODEChanged();
    partial void OnPLACECODEChanging(string value);
    partial void OnPLACECODEChanged();
    partial void OnSTREETCODEChanging(string value);
    partial void OnSTREETCODEChanged();
    partial void OnEXTRCODEChanging(string value);
    partial void OnEXTRCODEChanged();
    partial void OnSEXTCODEChanging(string value);
    partial void OnSEXTCODEChanged();
    partial void OnOFFNAMEChanging(string value);
    partial void OnOFFNAMEChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    partial void OnAOLEVELChanging(int value);
    partial void OnAOLEVELChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnPLAINCODEChanging(string value);
    partial void OnPLAINCODEChanged();
    partial void OnACTSTATUSChanging(int value);
    partial void OnACTSTATUSChanged();
    partial void OnCENTSTATUSChanging(int value);
    partial void OnCENTSTATUSChanged();
    partial void OnOPERSTATUSChanging(int value);
    partial void OnOPERSTATUSChanged();
    partial void OnCURRSTATUSChanging(int value);
    partial void OnCURRSTATUSChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    partial void OnLIVESTATUSChanging(bool value);
    partial void OnLIVESTATUSChanged();
    #endregion
		
		public AddressObjects()
		{
			this._ActualStatus = default(EntityRef<ActualStatus>);
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			this._CenterStatuses = default(EntityRef<CenterStatuses>);
			this._CurrentStatuses = default(EntityRef<CurrentStatuses>);
			this._OperationStatuses = default(EntityRef<OperationStatuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AOID
		{
			get
			{
				return this._AOID;
			}
			set
			{
				if ((this._AOID != value))
				{
					this.OnAOIDChanging(value);
					this.SendPropertyChanging();
					this._AOID = value;
					this.SendPropertyChanged("AOID");
					this.OnAOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENTGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PARENTGUID
		{
			get
			{
				return this._PARENTGUID;
			}
			set
			{
				if ((this._PARENTGUID != value))
				{
					this.OnPARENTGUIDChanging(value);
					this.SendPropertyChanging();
					this._PARENTGUID = value;
					this.SendPropertyChanged("PARENTGUID");
					this.OnPARENTGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEXTID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NEXTID
		{
			get
			{
				return this._NEXTID;
			}
			set
			{
				if ((this._NEXTID != value))
				{
					this.OnNEXTIDChanging(value);
					this.SendPropertyChanging();
					this._NEXTID = value;
					this.SendPropertyChanged("NEXTID");
					this.OnNEXTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREVID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PREVID
		{
			get
			{
				return this._PREVID;
			}
			set
			{
				if ((this._PREVID != value))
				{
					this.OnPREVIDChanging(value);
					this.SendPropertyChanging();
					this._PREVID = value;
					this.SendPropertyChanged("PREVID");
					this.OnPREVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORMALNAME", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FORMALNAME
		{
			get
			{
				return this._FORMALNAME;
			}
			set
			{
				if ((this._FORMALNAME != value))
				{
					this.OnFORMALNAMEChanging(value);
					this.SendPropertyChanging();
					this._FORMALNAME = value;
					this.SendPropertyChanged("FORMALNAME");
					this.OnFORMALNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGIONCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string REGIONCODE
		{
			get
			{
				return this._REGIONCODE;
			}
			set
			{
				if ((this._REGIONCODE != value))
				{
					this.OnREGIONCODEChanging(value);
					this.SendPropertyChanging();
					this._REGIONCODE = value;
					this.SendPropertyChanged("REGIONCODE");
					this.OnREGIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTOCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AUTOCODE
		{
			get
			{
				return this._AUTOCODE;
			}
			set
			{
				if ((this._AUTOCODE != value))
				{
					this.OnAUTOCODEChanging(value);
					this.SendPropertyChanging();
					this._AUTOCODE = value;
					this.SendPropertyChanged("AUTOCODE");
					this.OnAUTOCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREACODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AREACODE
		{
			get
			{
				return this._AREACODE;
			}
			set
			{
				if ((this._AREACODE != value))
				{
					this.OnAREACODEChanging(value);
					this.SendPropertyChanging();
					this._AREACODE = value;
					this.SendPropertyChanged("AREACODE");
					this.OnAREACODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CITYCODE
		{
			get
			{
				return this._CITYCODE;
			}
			set
			{
				if ((this._CITYCODE != value))
				{
					this.OnCITYCODEChanging(value);
					this.SendPropertyChanging();
					this._CITYCODE = value;
					this.SendPropertyChanged("CITYCODE");
					this.OnCITYCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTARCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CTARCODE
		{
			get
			{
				return this._CTARCODE;
			}
			set
			{
				if ((this._CTARCODE != value))
				{
					this.OnCTARCODEChanging(value);
					this.SendPropertyChanging();
					this._CTARCODE = value;
					this.SendPropertyChanged("CTARCODE");
					this.OnCTARCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACECODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PLACECODE
		{
			get
			{
				return this._PLACECODE;
			}
			set
			{
				if ((this._PLACECODE != value))
				{
					this.OnPLACECODEChanging(value);
					this.SendPropertyChanging();
					this._PLACECODE = value;
					this.SendPropertyChanged("PLACECODE");
					this.OnPLACECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREETCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string STREETCODE
		{
			get
			{
				return this._STREETCODE;
			}
			set
			{
				if ((this._STREETCODE != value))
				{
					this.OnSTREETCODEChanging(value);
					this.SendPropertyChanging();
					this._STREETCODE = value;
					this.SendPropertyChanged("STREETCODE");
					this.OnSTREETCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTRCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string EXTRCODE
		{
			get
			{
				return this._EXTRCODE;
			}
			set
			{
				if ((this._EXTRCODE != value))
				{
					this.OnEXTRCODEChanging(value);
					this.SendPropertyChanging();
					this._EXTRCODE = value;
					this.SendPropertyChanged("EXTRCODE");
					this.OnEXTRCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEXTCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string SEXTCODE
		{
			get
			{
				return this._SEXTCODE;
			}
			set
			{
				if ((this._SEXTCODE != value))
				{
					this.OnSEXTCODEChanging(value);
					this.SendPropertyChanging();
					this._SEXTCODE = value;
					this.SendPropertyChanged("SEXTCODE");
					this.OnSEXTCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFNAME", DbType="VarChar(120)")]
		public string OFFNAME
		{
			get
			{
				return this._OFFNAME;
			}
			set
			{
				if ((this._OFFNAME != value))
				{
					this.OnOFFNAMEChanging(value);
					this.SendPropertyChanging();
					this._OFFNAME = value;
					this.SendPropertyChanged("OFFNAME");
					this.OnOFFNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="NChar(10)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="NChar(10)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="NChar(10)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="NChar(10)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="NChar(10)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="NChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NChar(10)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOLEVEL", DbType="Int NOT NULL")]
		public int AOLEVEL
		{
			get
			{
				return this._AOLEVEL;
			}
			set
			{
				if ((this._AOLEVEL != value))
				{
					this.OnAOLEVELChanging(value);
					this.SendPropertyChanging();
					this._AOLEVEL = value;
					this.SendPropertyChanged("AOLEVEL");
					this.OnAOLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(17)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAINCODE", DbType="VarChar(15)")]
		public string PLAINCODE
		{
			get
			{
				return this._PLAINCODE;
			}
			set
			{
				if ((this._PLAINCODE != value))
				{
					this.OnPLAINCODEChanging(value);
					this.SendPropertyChanging();
					this._PLAINCODE = value;
					this.SendPropertyChanged("PLAINCODE");
					this.OnPLAINCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTSTATUS", DbType="Int NOT NULL")]
		public int ACTSTATUS
		{
			get
			{
				return this._ACTSTATUS;
			}
			set
			{
				if ((this._ACTSTATUS != value))
				{
					if (this._ActualStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._ACTSTATUS = value;
					this.SendPropertyChanged("ACTSTATUS");
					this.OnACTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CENTSTATUS", DbType="Int NOT NULL")]
		public int CENTSTATUS
		{
			get
			{
				return this._CENTSTATUS;
			}
			set
			{
				if ((this._CENTSTATUS != value))
				{
					if (this._CenterStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCENTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CENTSTATUS = value;
					this.SendPropertyChanged("CENTSTATUS");
					this.OnCENTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATUS", DbType="Int NOT NULL")]
		public int OPERSTATUS
		{
			get
			{
				return this._OPERSTATUS;
			}
			set
			{
				if ((this._OPERSTATUS != value))
				{
					if (this._OperationStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOPERSTATUSChanging(value);
					this.SendPropertyChanging();
					this._OPERSTATUS = value;
					this.SendPropertyChanged("OPERSTATUS");
					this.OnOPERSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRSTATUS", DbType="Int NOT NULL")]
		public int CURRSTATUS
		{
			get
			{
				return this._CURRSTATUS;
			}
			set
			{
				if ((this._CURRSTATUS != value))
				{
					if (this._CurrentStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCURRSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CURRSTATUS = value;
					this.SendPropertyChanged("CURRSTATUS");
					this.OnCURRSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIVESTATUS", DbType="Bit NOT NULL")]
		public bool LIVESTATUS
		{
			get
			{
				return this._LIVESTATUS;
			}
			set
			{
				if ((this._LIVESTATUS != value))
				{
					this.OnLIVESTATUSChanging(value);
					this.SendPropertyChanging();
					this._LIVESTATUS = value;
					this.SendPropertyChanged("LIVESTATUS");
					this.OnLIVESTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActualStatus_AddressObjects", Storage="_ActualStatus", ThisKey="ACTSTATUS", OtherKey="ACTSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ActualStatus ActualStatus
		{
			get
			{
				return this._ActualStatus.Entity;
			}
			set
			{
				ActualStatus previousValue = this._ActualStatus.Entity;
				if (((previousValue != value) 
							|| (this._ActualStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActualStatus.Entity = null;
						previousValue.AddressObjects.Remove(this);
					}
					this._ActualStatus.Entity = value;
					if ((value != null))
					{
						value.AddressObjects.Add(this);
						this._ACTSTATUS = value.ACTSTATID;
					}
					else
					{
						this._ACTSTATUS = default(int);
					}
					this.SendPropertyChanged("ActualStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_AddressObjects", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.AddressObjects.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.AddressObjects.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CenterStatuses_AddressObjects", Storage="_CenterStatuses", ThisKey="CENTSTATUS", OtherKey="CENTERSTID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CenterStatuses CenterStatuses
		{
			get
			{
				return this._CenterStatuses.Entity;
			}
			set
			{
				CenterStatuses previousValue = this._CenterStatuses.Entity;
				if (((previousValue != value) 
							|| (this._CenterStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CenterStatuses.Entity = null;
						previousValue.AddressObjects.Remove(this);
					}
					this._CenterStatuses.Entity = value;
					if ((value != null))
					{
						value.AddressObjects.Add(this);
						this._CENTSTATUS = value.CENTERSTID;
					}
					else
					{
						this._CENTSTATUS = default(int);
					}
					this.SendPropertyChanged("CenterStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrentStatuses_AddressObjects", Storage="_CurrentStatuses", ThisKey="CURRSTATUS", OtherKey="CURENTSTID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CurrentStatuses CurrentStatuses
		{
			get
			{
				return this._CurrentStatuses.Entity;
			}
			set
			{
				CurrentStatuses previousValue = this._CurrentStatuses.Entity;
				if (((previousValue != value) 
							|| (this._CurrentStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrentStatuses.Entity = null;
						previousValue.AddressObjects.Remove(this);
					}
					this._CurrentStatuses.Entity = value;
					if ((value != null))
					{
						value.AddressObjects.Add(this);
						this._CURRSTATUS = value.CURENTSTID;
					}
					else
					{
						this._CURRSTATUS = default(int);
					}
					this.SendPropertyChanged("CurrentStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatuses_AddressObjects", Storage="_OperationStatuses", ThisKey="OPERSTATUS", OtherKey="OPERSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OperationStatuses OperationStatuses
		{
			get
			{
				return this._OperationStatuses.Entity;
			}
			set
			{
				OperationStatuses previousValue = this._OperationStatuses.Entity;
				if (((previousValue != value) 
							|| (this._OperationStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationStatuses.Entity = null;
						previousValue.AddressObjects.Remove(this);
					}
					this._OperationStatuses.Entity = value;
					if ((value != null))
					{
						value.AddressObjects.Add(this);
						this._OPERSTATUS = value.OPERSTATID;
					}
					else
					{
						this._OPERSTATUS = default(int);
					}
					this.SendPropertyChanged("OperationStatuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressObjectsAllKey")]
	public partial class AddressObjectsAllKey : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AOGUID;
		
		private EntitySet<AddressObjects> _AddressObjects;
		
		private EntitySet<DellAddressObjects> _DellAddressObjects;
		
		private EntitySet<DellHouseIntervals> _DellHouseIntervals;
		
		private EntitySet<DellHouses> _DellHouses;
		
		private EntitySet<HouseIntervals> _HouseIntervals;
		
		private EntitySet<Houses> _Houses;
		
		private EntitySet<Landmarks> _Landmarks;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    #endregion
		
		public AddressObjectsAllKey()
		{
			this._AddressObjects = new EntitySet<AddressObjects>(new Action<AddressObjects>(this.attach_AddressObjects), new Action<AddressObjects>(this.detach_AddressObjects));
			this._DellAddressObjects = new EntitySet<DellAddressObjects>(new Action<DellAddressObjects>(this.attach_DellAddressObjects), new Action<DellAddressObjects>(this.detach_DellAddressObjects));
			this._DellHouseIntervals = new EntitySet<DellHouseIntervals>(new Action<DellHouseIntervals>(this.attach_DellHouseIntervals), new Action<DellHouseIntervals>(this.detach_DellHouseIntervals));
			this._DellHouses = new EntitySet<DellHouses>(new Action<DellHouses>(this.attach_DellHouses), new Action<DellHouses>(this.detach_DellHouses));
			this._HouseIntervals = new EntitySet<HouseIntervals>(new Action<HouseIntervals>(this.attach_HouseIntervals), new Action<HouseIntervals>(this.detach_HouseIntervals));
			this._Houses = new EntitySet<Houses>(new Action<Houses>(this.attach_Houses), new Action<Houses>(this.detach_Houses));
			this._Landmarks = new EntitySet<Landmarks>(new Action<Landmarks>(this.attach_Landmarks), new Action<Landmarks>(this.detach_Landmarks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_AddressObjects", Storage="_AddressObjects", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<AddressObjects> AddressObjects
		{
			get
			{
				return this._AddressObjects;
			}
			set
			{
				this._AddressObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_DellAddressObjects", Storage="_DellAddressObjects", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<DellAddressObjects> DellAddressObjects
		{
			get
			{
				return this._DellAddressObjects;
			}
			set
			{
				this._DellAddressObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_DellHouseIntervals", Storage="_DellHouseIntervals", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<DellHouseIntervals> DellHouseIntervals
		{
			get
			{
				return this._DellHouseIntervals;
			}
			set
			{
				this._DellHouseIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_DellHouses", Storage="_DellHouses", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<DellHouses> DellHouses
		{
			get
			{
				return this._DellHouses;
			}
			set
			{
				this._DellHouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_HouseIntervals", Storage="_HouseIntervals", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<HouseIntervals> HouseIntervals
		{
			get
			{
				return this._HouseIntervals;
			}
			set
			{
				this._HouseIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_Houses", Storage="_Houses", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<Houses> Houses
		{
			get
			{
				return this._Houses;
			}
			set
			{
				this._Houses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_Landmarks", Storage="_Landmarks", ThisKey="AOGUID", OtherKey="AOGUID")]
		public EntitySet<Landmarks> Landmarks
		{
			get
			{
				return this._Landmarks;
			}
			set
			{
				this._Landmarks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
		
		private void attach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
		
		private void attach_DellHouseIntervals(DellHouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_DellHouseIntervals(DellHouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
		
		private void attach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
		
		private void attach_HouseIntervals(HouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_HouseIntervals(HouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
		
		private void attach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
		
		private void attach_Landmarks(Landmarks entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = this;
		}
		
		private void detach_Landmarks(Landmarks entity)
		{
			this.SendPropertyChanging();
			entity.AddressObjectsAllKey = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AddressObjectTypes")]
	public partial class AddressObjectTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _KOD_T_ST;
		
		private int _LEVEL;
		
		private string _SCNAME;
		
		private string _SOCRNAME;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKOD_T_STChanging(string value);
    partial void OnKOD_T_STChanged();
    partial void OnLEVELChanging(int value);
    partial void OnLEVELChanged();
    partial void OnSCNAMEChanging(string value);
    partial void OnSCNAMEChanged();
    partial void OnSOCRNAMEChanging(string value);
    partial void OnSOCRNAMEChanged();
    #endregion
		
		public AddressObjectTypes()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KOD_T_ST", DbType="VarChar(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string KOD_T_ST
		{
			get
			{
				return this._KOD_T_ST;
			}
			set
			{
				if ((this._KOD_T_ST != value))
				{
					this.OnKOD_T_STChanging(value);
					this.SendPropertyChanging();
					this._KOD_T_ST = value;
					this.SendPropertyChanged("KOD_T_ST");
					this.OnKOD_T_STChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[LEVEL]", Storage="_LEVEL", DbType="Int NOT NULL")]
		public int LEVEL
		{
			get
			{
				return this._LEVEL;
			}
			set
			{
				if ((this._LEVEL != value))
				{
					this.OnLEVELChanging(value);
					this.SendPropertyChanging();
					this._LEVEL = value;
					this.SendPropertyChanged("LEVEL");
					this.OnLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SCNAME", DbType="VarChar(10)")]
		public string SCNAME
		{
			get
			{
				return this._SCNAME;
			}
			set
			{
				if ((this._SCNAME != value))
				{
					this.OnSCNAMEChanging(value);
					this.SendPropertyChanging();
					this._SCNAME = value;
					this.SendPropertyChanged("SCNAME");
					this.OnSCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOCRNAME", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string SOCRNAME
		{
			get
			{
				return this._SOCRNAME;
			}
			set
			{
				if ((this._SOCRNAME != value))
				{
					this.OnSOCRNAMEChanging(value);
					this.SendPropertyChanging();
					this._SOCRNAME = value;
					this.SendPropertyChanged("SOCRNAME");
					this.OnSOCRNAMEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterStatuses")]
	public partial class CenterStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CENTERSTID;
		
		private string _NAME;
		
		private EntitySet<AddressObjects> _AddressObjects;
		
		private EntitySet<DellAddressObjects> _DellAddressObjects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCENTERSTIDChanging(int value);
    partial void OnCENTERSTIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public CenterStatuses()
		{
			this._AddressObjects = new EntitySet<AddressObjects>(new Action<AddressObjects>(this.attach_AddressObjects), new Action<AddressObjects>(this.detach_AddressObjects));
			this._DellAddressObjects = new EntitySet<DellAddressObjects>(new Action<DellAddressObjects>(this.attach_DellAddressObjects), new Action<DellAddressObjects>(this.detach_DellAddressObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CENTERSTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CENTERSTID
		{
			get
			{
				return this._CENTERSTID;
			}
			set
			{
				if ((this._CENTERSTID != value))
				{
					this.OnCENTERSTIDChanging(value);
					this.SendPropertyChanging();
					this._CENTERSTID = value;
					this.SendPropertyChanged("CENTERSTID");
					this.OnCENTERSTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CenterStatuses_AddressObjects", Storage="_AddressObjects", ThisKey="CENTERSTID", OtherKey="CENTSTATUS")]
		public EntitySet<AddressObjects> AddressObjects
		{
			get
			{
				return this._AddressObjects;
			}
			set
			{
				this._AddressObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CenterStatuses_DellAddressObjects", Storage="_DellAddressObjects", ThisKey="CENTERSTID", OtherKey="CENTSTATUS")]
		public EntitySet<DellAddressObjects> DellAddressObjects
		{
			get
			{
				return this._DellAddressObjects;
			}
			set
			{
				this._DellAddressObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CenterStatuses = this;
		}
		
		private void detach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CenterStatuses = null;
		}
		
		private void attach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CenterStatuses = this;
		}
		
		private void detach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CenterStatuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CurrentStatuses")]
	public partial class CurrentStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CURENTSTID;
		
		private string _NAME;
		
		private EntitySet<AddressObjects> _AddressObjects;
		
		private EntitySet<DellAddressObjects> _DellAddressObjects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCURENTSTIDChanging(int value);
    partial void OnCURENTSTIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public CurrentStatuses()
		{
			this._AddressObjects = new EntitySet<AddressObjects>(new Action<AddressObjects>(this.attach_AddressObjects), new Action<AddressObjects>(this.detach_AddressObjects));
			this._DellAddressObjects = new EntitySet<DellAddressObjects>(new Action<DellAddressObjects>(this.attach_DellAddressObjects), new Action<DellAddressObjects>(this.detach_DellAddressObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURENTSTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CURENTSTID
		{
			get
			{
				return this._CURENTSTID;
			}
			set
			{
				if ((this._CURENTSTID != value))
				{
					this.OnCURENTSTIDChanging(value);
					this.SendPropertyChanging();
					this._CURENTSTID = value;
					this.SendPropertyChanged("CURENTSTID");
					this.OnCURENTSTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrentStatuses_AddressObjects", Storage="_AddressObjects", ThisKey="CURENTSTID", OtherKey="CURRSTATUS")]
		public EntitySet<AddressObjects> AddressObjects
		{
			get
			{
				return this._AddressObjects;
			}
			set
			{
				this._AddressObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrentStatuses_DellAddressObjects", Storage="_DellAddressObjects", ThisKey="CURENTSTID", OtherKey="CURRSTATUS")]
		public EntitySet<DellAddressObjects> DellAddressObjects
		{
			get
			{
				return this._DellAddressObjects;
			}
			set
			{
				this._DellAddressObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CurrentStatuses = this;
		}
		
		private void detach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CurrentStatuses = null;
		}
		
		private void attach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CurrentStatuses = this;
		}
		
		private void detach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.CurrentStatuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DellAddressObjects")]
	public partial class DellAddressObjects : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AOID;
		
		private System.Guid _AOGUID;
		
		private string _FORMALNAME;
		
		private string _REGIONCODE;
		
		private string _AUTOCODE;
		
		private string _AREACODE;
		
		private string _CITYCODE;
		
		private string _CTARCODE;
		
		private string _PLACECODE;
		
		private string _STREETCODE;
		
		private string _EXTRCODE;
		
		private string _SEXTCODE;
		
		private string _OFFNAME;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _SHORTNAME;
		
		private int _AOLEVEL;
		
		private System.Nullable<System.Guid> _PARENTGUID;
		
		private System.Nullable<System.Guid> _PREVID;
		
		private System.Nullable<System.Guid> _NEXTID;
		
		private string _CODE;
		
		private string _PLAINCODE;
		
		private int _ACTSTATUS;
		
		private int _CENTSTATUS;
		
		private int _OPERSTATUS;
		
		private int _CURRSTATUS;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private bool _LIVESTATUS;
		
		private EntityRef<ActualStatus> _ActualStatus;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
		private EntityRef<CenterStatuses> _CenterStatuses;
		
		private EntityRef<CurrentStatuses> _CurrentStatuses;
		
		private EntityRef<OperationStatuses> _OperationStatuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAOIDChanging(System.Guid value);
    partial void OnAOIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnFORMALNAMEChanging(string value);
    partial void OnFORMALNAMEChanged();
    partial void OnREGIONCODEChanging(string value);
    partial void OnREGIONCODEChanged();
    partial void OnAUTOCODEChanging(string value);
    partial void OnAUTOCODEChanged();
    partial void OnAREACODEChanging(string value);
    partial void OnAREACODEChanged();
    partial void OnCITYCODEChanging(string value);
    partial void OnCITYCODEChanged();
    partial void OnCTARCODEChanging(string value);
    partial void OnCTARCODEChanged();
    partial void OnPLACECODEChanging(string value);
    partial void OnPLACECODEChanged();
    partial void OnSTREETCODEChanging(string value);
    partial void OnSTREETCODEChanged();
    partial void OnEXTRCODEChanging(string value);
    partial void OnEXTRCODEChanged();
    partial void OnSEXTCODEChanging(string value);
    partial void OnSEXTCODEChanged();
    partial void OnOFFNAMEChanging(string value);
    partial void OnOFFNAMEChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    partial void OnAOLEVELChanging(int value);
    partial void OnAOLEVELChanged();
    partial void OnPARENTGUIDChanging(System.Nullable<System.Guid> value);
    partial void OnPARENTGUIDChanged();
    partial void OnPREVIDChanging(System.Nullable<System.Guid> value);
    partial void OnPREVIDChanged();
    partial void OnNEXTIDChanging(System.Nullable<System.Guid> value);
    partial void OnNEXTIDChanged();
    partial void OnCODEChanging(string value);
    partial void OnCODEChanged();
    partial void OnPLAINCODEChanging(string value);
    partial void OnPLAINCODEChanged();
    partial void OnACTSTATUSChanging(int value);
    partial void OnACTSTATUSChanged();
    partial void OnCENTSTATUSChanging(int value);
    partial void OnCENTSTATUSChanged();
    partial void OnOPERSTATUSChanging(int value);
    partial void OnOPERSTATUSChanged();
    partial void OnCURRSTATUSChanging(int value);
    partial void OnCURRSTATUSChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    partial void OnLIVESTATUSChanging(bool value);
    partial void OnLIVESTATUSChanged();
    #endregion
		
		public DellAddressObjects()
		{
			this._ActualStatus = default(EntityRef<ActualStatus>);
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			this._CenterStatuses = default(EntityRef<CenterStatuses>);
			this._CurrentStatuses = default(EntityRef<CurrentStatuses>);
			this._OperationStatuses = default(EntityRef<OperationStatuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AOID
		{
			get
			{
				return this._AOID;
			}
			set
			{
				if ((this._AOID != value))
				{
					this.OnAOIDChanging(value);
					this.SendPropertyChanging();
					this._AOID = value;
					this.SendPropertyChanged("AOID");
					this.OnAOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FORMALNAME", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FORMALNAME
		{
			get
			{
				return this._FORMALNAME;
			}
			set
			{
				if ((this._FORMALNAME != value))
				{
					this.OnFORMALNAMEChanging(value);
					this.SendPropertyChanging();
					this._FORMALNAME = value;
					this.SendPropertyChanged("FORMALNAME");
					this.OnFORMALNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_REGIONCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string REGIONCODE
		{
			get
			{
				return this._REGIONCODE;
			}
			set
			{
				if ((this._REGIONCODE != value))
				{
					this.OnREGIONCODEChanging(value);
					this.SendPropertyChanging();
					this._REGIONCODE = value;
					this.SendPropertyChanged("REGIONCODE");
					this.OnREGIONCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AUTOCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AUTOCODE
		{
			get
			{
				return this._AUTOCODE;
			}
			set
			{
				if ((this._AUTOCODE != value))
				{
					this.OnAUTOCODEChanging(value);
					this.SendPropertyChanging();
					this._AUTOCODE = value;
					this.SendPropertyChanged("AUTOCODE");
					this.OnAUTOCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AREACODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string AREACODE
		{
			get
			{
				return this._AREACODE;
			}
			set
			{
				if ((this._AREACODE != value))
				{
					this.OnAREACODEChanging(value);
					this.SendPropertyChanging();
					this._AREACODE = value;
					this.SendPropertyChanged("AREACODE");
					this.OnAREACODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CITYCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CITYCODE
		{
			get
			{
				return this._CITYCODE;
			}
			set
			{
				if ((this._CITYCODE != value))
				{
					this.OnCITYCODEChanging(value);
					this.SendPropertyChanging();
					this._CITYCODE = value;
					this.SendPropertyChanged("CITYCODE");
					this.OnCITYCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CTARCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string CTARCODE
		{
			get
			{
				return this._CTARCODE;
			}
			set
			{
				if ((this._CTARCODE != value))
				{
					this.OnCTARCODEChanging(value);
					this.SendPropertyChanging();
					this._CTARCODE = value;
					this.SendPropertyChanged("CTARCODE");
					this.OnCTARCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLACECODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string PLACECODE
		{
			get
			{
				return this._PLACECODE;
			}
			set
			{
				if ((this._PLACECODE != value))
				{
					this.OnPLACECODEChanging(value);
					this.SendPropertyChanging();
					this._PLACECODE = value;
					this.SendPropertyChanged("PLACECODE");
					this.OnPLACECODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STREETCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string STREETCODE
		{
			get
			{
				return this._STREETCODE;
			}
			set
			{
				if ((this._STREETCODE != value))
				{
					this.OnSTREETCODEChanging(value);
					this.SendPropertyChanging();
					this._STREETCODE = value;
					this.SendPropertyChanged("STREETCODE");
					this.OnSTREETCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EXTRCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string EXTRCODE
		{
			get
			{
				return this._EXTRCODE;
			}
			set
			{
				if ((this._EXTRCODE != value))
				{
					this.OnEXTRCODEChanging(value);
					this.SendPropertyChanging();
					this._EXTRCODE = value;
					this.SendPropertyChanged("EXTRCODE");
					this.OnEXTRCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SEXTCODE", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string SEXTCODE
		{
			get
			{
				return this._SEXTCODE;
			}
			set
			{
				if ((this._SEXTCODE != value))
				{
					this.OnSEXTCODEChanging(value);
					this.SendPropertyChanging();
					this._SEXTCODE = value;
					this.SendPropertyChanged("SEXTCODE");
					this.OnSEXTCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OFFNAME", DbType="VarChar(120)")]
		public string OFFNAME
		{
			get
			{
				return this._OFFNAME;
			}
			set
			{
				if ((this._OFFNAME != value))
				{
					this.OnOFFNAMEChanging(value);
					this.SendPropertyChanging();
					this._OFFNAME = value;
					this.SendPropertyChanged("OFFNAME");
					this.OnOFFNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="NChar(10)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="NChar(10)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="NChar(10)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="NChar(10)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="NChar(10)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="NChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NChar(10)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOLEVEL", DbType="Int NOT NULL")]
		public int AOLEVEL
		{
			get
			{
				return this._AOLEVEL;
			}
			set
			{
				if ((this._AOLEVEL != value))
				{
					this.OnAOLEVELChanging(value);
					this.SendPropertyChanging();
					this._AOLEVEL = value;
					this.SendPropertyChanged("AOLEVEL");
					this.OnAOLEVELChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PARENTGUID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PARENTGUID
		{
			get
			{
				return this._PARENTGUID;
			}
			set
			{
				if ((this._PARENTGUID != value))
				{
					this.OnPARENTGUIDChanging(value);
					this.SendPropertyChanging();
					this._PARENTGUID = value;
					this.SendPropertyChanged("PARENTGUID");
					this.OnPARENTGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PREVID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PREVID
		{
			get
			{
				return this._PREVID;
			}
			set
			{
				if ((this._PREVID != value))
				{
					this.OnPREVIDChanging(value);
					this.SendPropertyChanging();
					this._PREVID = value;
					this.SendPropertyChanged("PREVID");
					this.OnPREVIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NEXTID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NEXTID
		{
			get
			{
				return this._NEXTID;
			}
			set
			{
				if ((this._NEXTID != value))
				{
					this.OnNEXTIDChanging(value);
					this.SendPropertyChanging();
					this._NEXTID = value;
					this.SendPropertyChanged("NEXTID");
					this.OnNEXTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CODE", DbType="VarChar(17)")]
		public string CODE
		{
			get
			{
				return this._CODE;
			}
			set
			{
				if ((this._CODE != value))
				{
					this.OnCODEChanging(value);
					this.SendPropertyChanging();
					this._CODE = value;
					this.SendPropertyChanged("CODE");
					this.OnCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PLAINCODE", DbType="VarChar(15)")]
		public string PLAINCODE
		{
			get
			{
				return this._PLAINCODE;
			}
			set
			{
				if ((this._PLAINCODE != value))
				{
					this.OnPLAINCODEChanging(value);
					this.SendPropertyChanging();
					this._PLAINCODE = value;
					this.SendPropertyChanged("PLAINCODE");
					this.OnPLAINCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACTSTATUS", DbType="Int NOT NULL")]
		public int ACTSTATUS
		{
			get
			{
				return this._ACTSTATUS;
			}
			set
			{
				if ((this._ACTSTATUS != value))
				{
					if (this._ActualStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnACTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._ACTSTATUS = value;
					this.SendPropertyChanged("ACTSTATUS");
					this.OnACTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CENTSTATUS", DbType="Int NOT NULL")]
		public int CENTSTATUS
		{
			get
			{
				return this._CENTSTATUS;
			}
			set
			{
				if ((this._CENTSTATUS != value))
				{
					if (this._CenterStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCENTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CENTSTATUS = value;
					this.SendPropertyChanged("CENTSTATUS");
					this.OnCENTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATUS", DbType="Int NOT NULL")]
		public int OPERSTATUS
		{
			get
			{
				return this._OPERSTATUS;
			}
			set
			{
				if ((this._OPERSTATUS != value))
				{
					if (this._OperationStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOPERSTATUSChanging(value);
					this.SendPropertyChanging();
					this._OPERSTATUS = value;
					this.SendPropertyChanged("OPERSTATUS");
					this.OnOPERSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CURRSTATUS", DbType="Int NOT NULL")]
		public int CURRSTATUS
		{
			get
			{
				return this._CURRSTATUS;
			}
			set
			{
				if ((this._CURRSTATUS != value))
				{
					if (this._CurrentStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCURRSTATUSChanging(value);
					this.SendPropertyChanging();
					this._CURRSTATUS = value;
					this.SendPropertyChanged("CURRSTATUS");
					this.OnCURRSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LIVESTATUS", DbType="Bit NOT NULL")]
		public bool LIVESTATUS
		{
			get
			{
				return this._LIVESTATUS;
			}
			set
			{
				if ((this._LIVESTATUS != value))
				{
					this.OnLIVESTATUSChanging(value);
					this.SendPropertyChanging();
					this._LIVESTATUS = value;
					this.SendPropertyChanged("LIVESTATUS");
					this.OnLIVESTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActualStatus_DellAddressObjects", Storage="_ActualStatus", ThisKey="ACTSTATUS", OtherKey="ACTSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ActualStatus ActualStatus
		{
			get
			{
				return this._ActualStatus.Entity;
			}
			set
			{
				ActualStatus previousValue = this._ActualStatus.Entity;
				if (((previousValue != value) 
							|| (this._ActualStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActualStatus.Entity = null;
						previousValue.DellAddressObjects.Remove(this);
					}
					this._ActualStatus.Entity = value;
					if ((value != null))
					{
						value.DellAddressObjects.Add(this);
						this._ACTSTATUS = value.ACTSTATID;
					}
					else
					{
						this._ACTSTATUS = default(int);
					}
					this.SendPropertyChanged("ActualStatus");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_DellAddressObjects", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.DellAddressObjects.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.DellAddressObjects.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CenterStatuses_DellAddressObjects", Storage="_CenterStatuses", ThisKey="CENTSTATUS", OtherKey="CENTERSTID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CenterStatuses CenterStatuses
		{
			get
			{
				return this._CenterStatuses.Entity;
			}
			set
			{
				CenterStatuses previousValue = this._CenterStatuses.Entity;
				if (((previousValue != value) 
							|| (this._CenterStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CenterStatuses.Entity = null;
						previousValue.DellAddressObjects.Remove(this);
					}
					this._CenterStatuses.Entity = value;
					if ((value != null))
					{
						value.DellAddressObjects.Add(this);
						this._CENTSTATUS = value.CENTERSTID;
					}
					else
					{
						this._CENTSTATUS = default(int);
					}
					this.SendPropertyChanged("CenterStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CurrentStatuses_DellAddressObjects", Storage="_CurrentStatuses", ThisKey="CURRSTATUS", OtherKey="CURENTSTID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CurrentStatuses CurrentStatuses
		{
			get
			{
				return this._CurrentStatuses.Entity;
			}
			set
			{
				CurrentStatuses previousValue = this._CurrentStatuses.Entity;
				if (((previousValue != value) 
							|| (this._CurrentStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CurrentStatuses.Entity = null;
						previousValue.DellAddressObjects.Remove(this);
					}
					this._CurrentStatuses.Entity = value;
					if ((value != null))
					{
						value.DellAddressObjects.Add(this);
						this._CURRSTATUS = value.CURENTSTID;
					}
					else
					{
						this._CURRSTATUS = default(int);
					}
					this.SendPropertyChanged("CurrentStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatuses_DellAddressObjects", Storage="_OperationStatuses", ThisKey="OPERSTATUS", OtherKey="OPERSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public OperationStatuses OperationStatuses
		{
			get
			{
				return this._OperationStatuses.Entity;
			}
			set
			{
				OperationStatuses previousValue = this._OperationStatuses.Entity;
				if (((previousValue != value) 
							|| (this._OperationStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OperationStatuses.Entity = null;
						previousValue.DellAddressObjects.Remove(this);
					}
					this._OperationStatuses.Entity = value;
					if ((value != null))
					{
						value.DellAddressObjects.Add(this);
						this._OPERSTATUS = value.OPERSTATID;
					}
					else
					{
						this._OPERSTATUS = default(int);
					}
					this.SendPropertyChanged("OperationStatuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DellHouseIntervals")]
	public partial class DellHouseIntervals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HOUSEINTID;
		
		private System.Guid _INTGUID;
		
		private System.Guid _AOGUID;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private int _INTSTART;
		
		private int _INTEND;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private int _INTSTATUS;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private int _COUNTER;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
		private EntityRef<IntervalStatuses> _IntervalStatuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOUSEINTIDChanging(System.Guid value);
    partial void OnHOUSEINTIDChanged();
    partial void OnINTGUIDChanging(System.Guid value);
    partial void OnINTGUIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnINTSTARTChanging(int value);
    partial void OnINTSTARTChanged();
    partial void OnINTENDChanging(int value);
    partial void OnINTENDChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnINTSTATUSChanging(int value);
    partial void OnINTSTATUSChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    partial void OnCOUNTERChanging(int value);
    partial void OnCOUNTERChanged();
    #endregion
		
		public DellHouseIntervals()
		{
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			this._IntervalStatuses = default(EntityRef<IntervalStatuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEINTID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HOUSEINTID
		{
			get
			{
				return this._HOUSEINTID;
			}
			set
			{
				if ((this._HOUSEINTID != value))
				{
					this.OnHOUSEINTIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEINTID = value;
					this.SendPropertyChanged("HOUSEINTID");
					this.OnHOUSEINTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid INTGUID
		{
			get
			{
				return this._INTGUID;
			}
			set
			{
				if ((this._INTGUID != value))
				{
					this.OnINTGUIDChanging(value);
					this.SendPropertyChanging();
					this._INTGUID = value;
					this.SendPropertyChanged("INTGUID");
					this.OnINTGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="NChar(10)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="NChar(10)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="NChar(10)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="NChar(10)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="NChar(10)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="NChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NChar(10)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTSTART", DbType="Int NOT NULL")]
		public int INTSTART
		{
			get
			{
				return this._INTSTART;
			}
			set
			{
				if ((this._INTSTART != value))
				{
					this.OnINTSTARTChanging(value);
					this.SendPropertyChanging();
					this._INTSTART = value;
					this.SendPropertyChanged("INTSTART");
					this.OnINTSTARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTEND", DbType="Int NOT NULL")]
		public int INTEND
		{
			get
			{
				return this._INTEND;
			}
			set
			{
				if ((this._INTEND != value))
				{
					this.OnINTENDChanging(value);
					this.SendPropertyChanging();
					this._INTEND = value;
					this.SendPropertyChanged("INTEND");
					this.OnINTENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTSTATUS", DbType="Int NOT NULL")]
		public int INTSTATUS
		{
			get
			{
				return this._INTSTATUS;
			}
			set
			{
				if ((this._INTSTATUS != value))
				{
					if (this._IntervalStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._INTSTATUS = value;
					this.SendPropertyChanged("INTSTATUS");
					this.OnINTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTER", DbType="Int NOT NULL")]
		public int COUNTER
		{
			get
			{
				return this._COUNTER;
			}
			set
			{
				if ((this._COUNTER != value))
				{
					this.OnCOUNTERChanging(value);
					this.SendPropertyChanging();
					this._COUNTER = value;
					this.SendPropertyChanged("COUNTER");
					this.OnCOUNTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_DellHouseIntervals", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.DellHouseIntervals.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.DellHouseIntervals.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntervalStatuses_DellHouseIntervals", Storage="_IntervalStatuses", ThisKey="INTSTATUS", OtherKey="INTVSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public IntervalStatuses IntervalStatuses
		{
			get
			{
				return this._IntervalStatuses.Entity;
			}
			set
			{
				IntervalStatuses previousValue = this._IntervalStatuses.Entity;
				if (((previousValue != value) 
							|| (this._IntervalStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntervalStatuses.Entity = null;
						previousValue.DellHouseIntervals.Remove(this);
					}
					this._IntervalStatuses.Entity = value;
					if ((value != null))
					{
						value.DellHouseIntervals.Add(this);
						this._INTSTATUS = value.INTVSTATID;
					}
					else
					{
						this._INTSTATUS = default(int);
					}
					this.SendPropertyChanged("IntervalStatuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DellHouses")]
	public partial class DellHouses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HOUSEID;
		
		private System.Guid _AOGUID;
		
		private System.Guid _HOUSEGUID;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _HOUSENUM;
		
		private byte _ESTSTATUS;
		
		private string _BUILDNUM;
		
		private string _STRUCNUM;
		
		private int _STRSTATUS;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private int _STATSTATUS;
		
		private int _COUNTER;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
		private EntityRef<StructureStatuses> _StructureStatuses;
		
		private EntityRef<EstateStatuses> _EstateStatuses;
		
		private EntityRef<HouseStateStatuses> _HouseStateStatuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOUSEIDChanging(System.Guid value);
    partial void OnHOUSEIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnHOUSEGUIDChanging(System.Guid value);
    partial void OnHOUSEGUIDChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnHOUSENUMChanging(string value);
    partial void OnHOUSENUMChanged();
    partial void OnESTSTATUSChanging(byte value);
    partial void OnESTSTATUSChanged();
    partial void OnBUILDNUMChanging(string value);
    partial void OnBUILDNUMChanged();
    partial void OnSTRUCNUMChanging(string value);
    partial void OnSTRUCNUMChanged();
    partial void OnSTRSTATUSChanging(int value);
    partial void OnSTRSTATUSChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnSTATSTATUSChanging(int value);
    partial void OnSTATSTATUSChanged();
    partial void OnCOUNTERChanging(int value);
    partial void OnCOUNTERChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    #endregion
		
		public DellHouses()
		{
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			this._StructureStatuses = default(EntityRef<StructureStatuses>);
			this._EstateStatuses = default(EntityRef<EstateStatuses>);
			this._HouseStateStatuses = default(EntityRef<HouseStateStatuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HOUSEID
		{
			get
			{
				return this._HOUSEID;
			}
			set
			{
				if ((this._HOUSEID != value))
				{
					this.OnHOUSEIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEID = value;
					this.SendPropertyChanged("HOUSEID");
					this.OnHOUSEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HOUSEGUID
		{
			get
			{
				return this._HOUSEGUID;
			}
			set
			{
				if ((this._HOUSEGUID != value))
				{
					this.OnHOUSEGUIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEGUID = value;
					this.SendPropertyChanged("HOUSEGUID");
					this.OnHOUSEGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="Char(6)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="Char(4)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="Char(4)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="Char(4)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="Char(4)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="Char(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="Char(8)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSENUM", DbType="VarChar(20)")]
		public string HOUSENUM
		{
			get
			{
				return this._HOUSENUM;
			}
			set
			{
				if ((this._HOUSENUM != value))
				{
					this.OnHOUSENUMChanging(value);
					this.SendPropertyChanging();
					this._HOUSENUM = value;
					this.SendPropertyChanged("HOUSENUM");
					this.OnHOUSENUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTSTATUS", DbType="TinyInt NOT NULL")]
		public byte ESTSTATUS
		{
			get
			{
				return this._ESTSTATUS;
			}
			set
			{
				if ((this._ESTSTATUS != value))
				{
					if (this._EstateStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._ESTSTATUS = value;
					this.SendPropertyChanged("ESTSTATUS");
					this.OnESTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUILDNUM", DbType="VarChar(10)")]
		public string BUILDNUM
		{
			get
			{
				return this._BUILDNUM;
			}
			set
			{
				if ((this._BUILDNUM != value))
				{
					this.OnBUILDNUMChanging(value);
					this.SendPropertyChanging();
					this._BUILDNUM = value;
					this.SendPropertyChanged("BUILDNUM");
					this.OnBUILDNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRUCNUM", DbType="VarChar(10)")]
		public string STRUCNUM
		{
			get
			{
				return this._STRUCNUM;
			}
			set
			{
				if ((this._STRUCNUM != value))
				{
					this.OnSTRUCNUMChanging(value);
					this.SendPropertyChanging();
					this._STRUCNUM = value;
					this.SendPropertyChanged("STRUCNUM");
					this.OnSTRUCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRSTATUS", DbType="Int NOT NULL")]
		public int STRSTATUS
		{
			get
			{
				return this._STRSTATUS;
			}
			set
			{
				if ((this._STRSTATUS != value))
				{
					if ((this._StructureStatuses.HasLoadedOrAssignedValue || this._HouseStateStatuses.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTRSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STRSTATUS = value;
					this.SendPropertyChanged("STRSTATUS");
					this.OnSTRSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATSTATUS", DbType="Int NOT NULL")]
		public int STATSTATUS
		{
			get
			{
				return this._STATSTATUS;
			}
			set
			{
				if ((this._STATSTATUS != value))
				{
					this.OnSTATSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATSTATUS = value;
					this.SendPropertyChanged("STATSTATUS");
					this.OnSTATSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTER", DbType="Int NOT NULL")]
		public int COUNTER
		{
			get
			{
				return this._COUNTER;
			}
			set
			{
				if ((this._COUNTER != value))
				{
					this.OnCOUNTERChanging(value);
					this.SendPropertyChanging();
					this._COUNTER = value;
					this.SendPropertyChanged("COUNTER");
					this.OnCOUNTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_DellHouses", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.DellHouses.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.DellHouses.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructureStatuses_DellHouses", Storage="_StructureStatuses", ThisKey="STRSTATUS", OtherKey="STRSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StructureStatuses StructureStatuses
		{
			get
			{
				return this._StructureStatuses.Entity;
			}
			set
			{
				StructureStatuses previousValue = this._StructureStatuses.Entity;
				if (((previousValue != value) 
							|| (this._StructureStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructureStatuses.Entity = null;
						previousValue.DellHouses.Remove(this);
					}
					this._StructureStatuses.Entity = value;
					if ((value != null))
					{
						value.DellHouses.Add(this);
						this._STRSTATUS = value.STRSTATID;
					}
					else
					{
						this._STRSTATUS = default(int);
					}
					this.SendPropertyChanged("StructureStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateStatuses_DellHouses", Storage="_EstateStatuses", ThisKey="ESTSTATUS", OtherKey="ESTSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateStatuses EstateStatuses
		{
			get
			{
				return this._EstateStatuses.Entity;
			}
			set
			{
				EstateStatuses previousValue = this._EstateStatuses.Entity;
				if (((previousValue != value) 
							|| (this._EstateStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateStatuses.Entity = null;
						previousValue.DellHouses.Remove(this);
					}
					this._EstateStatuses.Entity = value;
					if ((value != null))
					{
						value.DellHouses.Add(this);
						this._ESTSTATUS = value.ESTSTATID;
					}
					else
					{
						this._ESTSTATUS = default(byte);
					}
					this.SendPropertyChanged("EstateStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HouseStateStatuses_DellHouses", Storage="_HouseStateStatuses", ThisKey="STRSTATUS", OtherKey="HOUSESTID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HouseStateStatuses HouseStateStatuses
		{
			get
			{
				return this._HouseStateStatuses.Entity;
			}
			set
			{
				HouseStateStatuses previousValue = this._HouseStateStatuses.Entity;
				if (((previousValue != value) 
							|| (this._HouseStateStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HouseStateStatuses.Entity = null;
						previousValue.DellHouses.Remove(this);
					}
					this._HouseStateStatuses.Entity = value;
					if ((value != null))
					{
						value.DellHouses.Add(this);
						this._STRSTATUS = value.HOUSESTID;
					}
					else
					{
						this._STRSTATUS = default(int);
					}
					this.SendPropertyChanged("HouseStateStatuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DellNormativeDocument")]
	public partial class DellNormativeDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NORMDOCID;
		
		private string _DOCNAME;
		
		private System.Nullable<System.DateTime> _DOCDATE;
		
		private string _DOCNUM;
		
		private int _DOCTYPE;
		
		private System.Nullable<int> _DOCIMGID;
		
		private EntityRef<NormativeDocumentTypes> _NormativeDocumentTypes;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNORMDOCIDChanging(System.Guid value);
    partial void OnNORMDOCIDChanged();
    partial void OnDOCNAMEChanging(string value);
    partial void OnDOCNAMEChanged();
    partial void OnDOCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDOCDATEChanged();
    partial void OnDOCNUMChanging(string value);
    partial void OnDOCNUMChanged();
    partial void OnDOCTYPEChanging(int value);
    partial void OnDOCTYPEChanged();
    partial void OnDOCIMGIDChanging(System.Nullable<int> value);
    partial void OnDOCIMGIDChanged();
    #endregion
		
		public DellNormativeDocument()
		{
			this._NormativeDocumentTypes = default(EntityRef<NormativeDocumentTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOCID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NORMDOCID
		{
			get
			{
				return this._NORMDOCID;
			}
			set
			{
				if ((this._NORMDOCID != value))
				{
					this.OnNORMDOCIDChanging(value);
					this.SendPropertyChanging();
					this._NORMDOCID = value;
					this.SendPropertyChanged("NORMDOCID");
					this.OnNORMDOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNAME", DbType="VarChar(MAX)")]
		public string DOCNAME
		{
			get
			{
				return this._DOCNAME;
			}
			set
			{
				if ((this._DOCNAME != value))
				{
					this.OnDOCNAMEChanging(value);
					this.SendPropertyChanging();
					this._DOCNAME = value;
					this.SendPropertyChanged("DOCNAME");
					this.OnDOCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOCDATE
		{
			get
			{
				return this._DOCDATE;
			}
			set
			{
				if ((this._DOCDATE != value))
				{
					this.OnDOCDATEChanging(value);
					this.SendPropertyChanging();
					this._DOCDATE = value;
					this.SendPropertyChanged("DOCDATE");
					this.OnDOCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNUM", DbType="VarChar(20)")]
		public string DOCNUM
		{
			get
			{
				return this._DOCNUM;
			}
			set
			{
				if ((this._DOCNUM != value))
				{
					this.OnDOCNUMChanging(value);
					this.SendPropertyChanging();
					this._DOCNUM = value;
					this.SendPropertyChanged("DOCNUM");
					this.OnDOCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTYPE", DbType="Int NOT NULL")]
		public int DOCTYPE
		{
			get
			{
				return this._DOCTYPE;
			}
			set
			{
				if ((this._DOCTYPE != value))
				{
					if (this._NormativeDocumentTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOCTYPEChanging(value);
					this.SendPropertyChanging();
					this._DOCTYPE = value;
					this.SendPropertyChanged("DOCTYPE");
					this.OnDOCTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCIMGID", DbType="Int")]
		public System.Nullable<int> DOCIMGID
		{
			get
			{
				return this._DOCIMGID;
			}
			set
			{
				if ((this._DOCIMGID != value))
				{
					this.OnDOCIMGIDChanging(value);
					this.SendPropertyChanging();
					this._DOCIMGID = value;
					this.SendPropertyChanged("DOCIMGID");
					this.OnDOCIMGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NormativeDocumentTypes_DellNormativeDocument", Storage="_NormativeDocumentTypes", ThisKey="DOCTYPE", OtherKey="NDTYPEID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NormativeDocumentTypes NormativeDocumentTypes
		{
			get
			{
				return this._NormativeDocumentTypes.Entity;
			}
			set
			{
				NormativeDocumentTypes previousValue = this._NormativeDocumentTypes.Entity;
				if (((previousValue != value) 
							|| (this._NormativeDocumentTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NormativeDocumentTypes.Entity = null;
						previousValue.DellNormativeDocument.Remove(this);
					}
					this._NormativeDocumentTypes.Entity = value;
					if ((value != null))
					{
						value.DellNormativeDocument.Add(this);
						this._DOCTYPE = value.NDTYPEID;
					}
					else
					{
						this._DOCTYPE = default(int);
					}
					this.SendPropertyChanged("NormativeDocumentTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EstateStatuses")]
	public partial class EstateStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private byte _ESTSTATID;
		
		private string _NAME;
		
		private string _SHORTNAME;
		
		private EntitySet<DellHouses> _DellHouses;
		
		private EntitySet<Houses> _Houses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnESTSTATIDChanging(byte value);
    partial void OnESTSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    partial void OnSHORTNAMEChanging(string value);
    partial void OnSHORTNAMEChanged();
    #endregion
		
		public EstateStatuses()
		{
			this._DellHouses = new EntitySet<DellHouses>(new Action<DellHouses>(this.attach_DellHouses), new Action<DellHouses>(this.detach_DellHouses));
			this._Houses = new EntitySet<Houses>(new Action<Houses>(this.attach_Houses), new Action<Houses>(this.detach_Houses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTSTATID", DbType="TinyInt NOT NULL", IsPrimaryKey=true)]
		public byte ESTSTATID
		{
			get
			{
				return this._ESTSTATID;
			}
			set
			{
				if ((this._ESTSTATID != value))
				{
					this.OnESTSTATIDChanging(value);
					this.SendPropertyChanging();
					this._ESTSTATID = value;
					this.SendPropertyChanged("ESTSTATID");
					this.OnESTSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SHORTNAME", DbType="NChar(20)")]
		public string SHORTNAME
		{
			get
			{
				return this._SHORTNAME;
			}
			set
			{
				if ((this._SHORTNAME != value))
				{
					this.OnSHORTNAMEChanging(value);
					this.SendPropertyChanging();
					this._SHORTNAME = value;
					this.SendPropertyChanged("SHORTNAME");
					this.OnSHORTNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateStatuses_DellHouses", Storage="_DellHouses", ThisKey="ESTSTATID", OtherKey="ESTSTATUS")]
		public EntitySet<DellHouses> DellHouses
		{
			get
			{
				return this._DellHouses;
			}
			set
			{
				this._DellHouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateStatuses_Houses", Storage="_Houses", ThisKey="ESTSTATID", OtherKey="ESTSTATUS")]
		public EntitySet<Houses> Houses
		{
			get
			{
				return this._Houses;
			}
			set
			{
				this._Houses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.EstateStatuses = this;
		}
		
		private void detach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.EstateStatuses = null;
		}
		
		private void attach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.EstateStatuses = this;
		}
		
		private void detach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.EstateStatuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HouseIntervals")]
	public partial class HouseIntervals : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HOUSEINTID;
		
		private System.Guid _INTGUID;
		
		private System.Guid _AOGUID;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private int _INTSTART;
		
		private int _INTEND;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private int _INTSTATUS;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private int _COUNTER;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
		private EntityRef<IntervalStatuses> _IntervalStatuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOUSEINTIDChanging(System.Guid value);
    partial void OnHOUSEINTIDChanged();
    partial void OnINTGUIDChanging(System.Guid value);
    partial void OnINTGUIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnINTSTARTChanging(int value);
    partial void OnINTSTARTChanged();
    partial void OnINTENDChanging(int value);
    partial void OnINTENDChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnINTSTATUSChanging(int value);
    partial void OnINTSTATUSChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    partial void OnCOUNTERChanging(int value);
    partial void OnCOUNTERChanged();
    #endregion
		
		public HouseIntervals()
		{
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			this._IntervalStatuses = default(EntityRef<IntervalStatuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEINTID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HOUSEINTID
		{
			get
			{
				return this._HOUSEINTID;
			}
			set
			{
				if ((this._HOUSEINTID != value))
				{
					this.OnHOUSEINTIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEINTID = value;
					this.SendPropertyChanged("HOUSEINTID");
					this.OnHOUSEINTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid INTGUID
		{
			get
			{
				return this._INTGUID;
			}
			set
			{
				if ((this._INTGUID != value))
				{
					this.OnINTGUIDChanging(value);
					this.SendPropertyChanging();
					this._INTGUID = value;
					this.SendPropertyChanged("INTGUID");
					this.OnINTGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="NChar(10)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="NChar(10)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="NChar(10)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="NChar(10)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="NChar(10)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="NChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NChar(10)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTSTART", DbType="Int NOT NULL")]
		public int INTSTART
		{
			get
			{
				return this._INTSTART;
			}
			set
			{
				if ((this._INTSTART != value))
				{
					this.OnINTSTARTChanging(value);
					this.SendPropertyChanging();
					this._INTSTART = value;
					this.SendPropertyChanged("INTSTART");
					this.OnINTSTARTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTEND", DbType="Int NOT NULL")]
		public int INTEND
		{
			get
			{
				return this._INTEND;
			}
			set
			{
				if ((this._INTEND != value))
				{
					this.OnINTENDChanging(value);
					this.SendPropertyChanging();
					this._INTEND = value;
					this.SendPropertyChanged("INTEND");
					this.OnINTENDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTSTATUS", DbType="Int NOT NULL")]
		public int INTSTATUS
		{
			get
			{
				return this._INTSTATUS;
			}
			set
			{
				if ((this._INTSTATUS != value))
				{
					if (this._IntervalStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnINTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._INTSTATUS = value;
					this.SendPropertyChanged("INTSTATUS");
					this.OnINTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTER", DbType="Int NOT NULL")]
		public int COUNTER
		{
			get
			{
				return this._COUNTER;
			}
			set
			{
				if ((this._COUNTER != value))
				{
					this.OnCOUNTERChanging(value);
					this.SendPropertyChanging();
					this._COUNTER = value;
					this.SendPropertyChanged("COUNTER");
					this.OnCOUNTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_HouseIntervals", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.HouseIntervals.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.HouseIntervals.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntervalStatuses_HouseIntervals", Storage="_IntervalStatuses", ThisKey="INTSTATUS", OtherKey="INTVSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public IntervalStatuses IntervalStatuses
		{
			get
			{
				return this._IntervalStatuses.Entity;
			}
			set
			{
				IntervalStatuses previousValue = this._IntervalStatuses.Entity;
				if (((previousValue != value) 
							|| (this._IntervalStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._IntervalStatuses.Entity = null;
						previousValue.HouseIntervals.Remove(this);
					}
					this._IntervalStatuses.Entity = value;
					if ((value != null))
					{
						value.HouseIntervals.Add(this);
						this._INTSTATUS = value.INTVSTATID;
					}
					else
					{
						this._INTSTATUS = default(int);
					}
					this.SendPropertyChanged("IntervalStatuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Houses")]
	public partial class Houses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _HOUSEID;
		
		private System.Guid _AOGUID;
		
		private System.Guid _HOUSEGUID;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private string _HOUSENUM;
		
		private byte _ESTSTATUS;
		
		private string _BUILDNUM;
		
		private string _STRUCNUM;
		
		private int _STRSTATUS;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private int _STATSTATUS;
		
		private int _COUNTER;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
		private EntityRef<EstateStatuses> _EstateStatuses;
		
		private EntityRef<StructureStatuses> _StructureStatuses;
		
		private EntityRef<HouseStateStatuses> _HouseStateStatuses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOUSEIDChanging(System.Guid value);
    partial void OnHOUSEIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnHOUSEGUIDChanging(System.Guid value);
    partial void OnHOUSEGUIDChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnHOUSENUMChanging(string value);
    partial void OnHOUSENUMChanged();
    partial void OnESTSTATUSChanging(byte value);
    partial void OnESTSTATUSChanged();
    partial void OnBUILDNUMChanging(string value);
    partial void OnBUILDNUMChanged();
    partial void OnSTRUCNUMChanging(string value);
    partial void OnSTRUCNUMChanged();
    partial void OnSTRSTATUSChanging(int value);
    partial void OnSTRSTATUSChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnSTATSTATUSChanging(int value);
    partial void OnSTATSTATUSChanged();
    partial void OnCOUNTERChanging(int value);
    partial void OnCOUNTERChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    #endregion
		
		public Houses()
		{
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			this._EstateStatuses = default(EntityRef<EstateStatuses>);
			this._StructureStatuses = default(EntityRef<StructureStatuses>);
			this._HouseStateStatuses = default(EntityRef<HouseStateStatuses>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid HOUSEID
		{
			get
			{
				return this._HOUSEID;
			}
			set
			{
				if ((this._HOUSEID != value))
				{
					this.OnHOUSEIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEID = value;
					this.SendPropertyChanged("HOUSEID");
					this.OnHOUSEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSEGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid HOUSEGUID
		{
			get
			{
				return this._HOUSEGUID;
			}
			set
			{
				if ((this._HOUSEGUID != value))
				{
					this.OnHOUSEGUIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSEGUID = value;
					this.SendPropertyChanged("HOUSEGUID");
					this.OnHOUSEGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="Char(6)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="Char(4)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="Char(4)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="Char(4)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="Char(4)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="Char(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="Char(8)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSENUM", DbType="VarChar(20)")]
		public string HOUSENUM
		{
			get
			{
				return this._HOUSENUM;
			}
			set
			{
				if ((this._HOUSENUM != value))
				{
					this.OnHOUSENUMChanging(value);
					this.SendPropertyChanging();
					this._HOUSENUM = value;
					this.SendPropertyChanged("HOUSENUM");
					this.OnHOUSENUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTSTATUS", DbType="TinyInt NOT NULL")]
		public byte ESTSTATUS
		{
			get
			{
				return this._ESTSTATUS;
			}
			set
			{
				if ((this._ESTSTATUS != value))
				{
					if (this._EstateStatuses.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTSTATUSChanging(value);
					this.SendPropertyChanging();
					this._ESTSTATUS = value;
					this.SendPropertyChanged("ESTSTATUS");
					this.OnESTSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BUILDNUM", DbType="VarChar(10)")]
		public string BUILDNUM
		{
			get
			{
				return this._BUILDNUM;
			}
			set
			{
				if ((this._BUILDNUM != value))
				{
					this.OnBUILDNUMChanging(value);
					this.SendPropertyChanging();
					this._BUILDNUM = value;
					this.SendPropertyChanged("BUILDNUM");
					this.OnBUILDNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRUCNUM", DbType="VarChar(10)")]
		public string STRUCNUM
		{
			get
			{
				return this._STRUCNUM;
			}
			set
			{
				if ((this._STRUCNUM != value))
				{
					this.OnSTRUCNUMChanging(value);
					this.SendPropertyChanging();
					this._STRUCNUM = value;
					this.SendPropertyChanged("STRUCNUM");
					this.OnSTRUCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STRSTATUS", DbType="Int NOT NULL")]
		public int STRSTATUS
		{
			get
			{
				return this._STRSTATUS;
			}
			set
			{
				if ((this._STRSTATUS != value))
				{
					if ((this._StructureStatuses.HasLoadedOrAssignedValue || this._HouseStateStatuses.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSTRSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STRSTATUS = value;
					this.SendPropertyChanged("STRSTATUS");
					this.OnSTRSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STATSTATUS", DbType="Int NOT NULL")]
		public int STATSTATUS
		{
			get
			{
				return this._STATSTATUS;
			}
			set
			{
				if ((this._STATSTATUS != value))
				{
					this.OnSTATSTATUSChanging(value);
					this.SendPropertyChanging();
					this._STATSTATUS = value;
					this.SendPropertyChanged("STATSTATUS");
					this.OnSTATSTATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_COUNTER", DbType="Int NOT NULL")]
		public int COUNTER
		{
			get
			{
				return this._COUNTER;
			}
			set
			{
				if ((this._COUNTER != value))
				{
					this.OnCOUNTERChanging(value);
					this.SendPropertyChanging();
					this._COUNTER = value;
					this.SendPropertyChanged("COUNTER");
					this.OnCOUNTERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_Houses", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.Houses.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.Houses.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EstateStatuses_Houses", Storage="_EstateStatuses", ThisKey="ESTSTATUS", OtherKey="ESTSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public EstateStatuses EstateStatuses
		{
			get
			{
				return this._EstateStatuses.Entity;
			}
			set
			{
				EstateStatuses previousValue = this._EstateStatuses.Entity;
				if (((previousValue != value) 
							|| (this._EstateStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EstateStatuses.Entity = null;
						previousValue.Houses.Remove(this);
					}
					this._EstateStatuses.Entity = value;
					if ((value != null))
					{
						value.Houses.Add(this);
						this._ESTSTATUS = value.ESTSTATID;
					}
					else
					{
						this._ESTSTATUS = default(byte);
					}
					this.SendPropertyChanged("EstateStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StructureStatuses_Houses", Storage="_StructureStatuses", ThisKey="STRSTATUS", OtherKey="STRSTATID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public StructureStatuses StructureStatuses
		{
			get
			{
				return this._StructureStatuses.Entity;
			}
			set
			{
				StructureStatuses previousValue = this._StructureStatuses.Entity;
				if (((previousValue != value) 
							|| (this._StructureStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StructureStatuses.Entity = null;
						previousValue.Houses.Remove(this);
					}
					this._StructureStatuses.Entity = value;
					if ((value != null))
					{
						value.Houses.Add(this);
						this._STRSTATUS = value.STRSTATID;
					}
					else
					{
						this._STRSTATUS = default(int);
					}
					this.SendPropertyChanged("StructureStatuses");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HouseStateStatuses_Houses", Storage="_HouseStateStatuses", ThisKey="STRSTATUS", OtherKey="HOUSESTID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public HouseStateStatuses HouseStateStatuses
		{
			get
			{
				return this._HouseStateStatuses.Entity;
			}
			set
			{
				HouseStateStatuses previousValue = this._HouseStateStatuses.Entity;
				if (((previousValue != value) 
							|| (this._HouseStateStatuses.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HouseStateStatuses.Entity = null;
						previousValue.Houses.Remove(this);
					}
					this._HouseStateStatuses.Entity = value;
					if ((value != null))
					{
						value.Houses.Add(this);
						this._STRSTATUS = value.HOUSESTID;
					}
					else
					{
						this._STRSTATUS = default(int);
					}
					this.SendPropertyChanged("HouseStateStatuses");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HouseStateStatuses")]
	public partial class HouseStateStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _HOUSESTID;
		
		private string _NAME;
		
		private EntitySet<DellHouses> _DellHouses;
		
		private EntitySet<Houses> _Houses;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnHOUSESTIDChanging(int value);
    partial void OnHOUSESTIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public HouseStateStatuses()
		{
			this._DellHouses = new EntitySet<DellHouses>(new Action<DellHouses>(this.attach_DellHouses), new Action<DellHouses>(this.detach_DellHouses));
			this._Houses = new EntitySet<Houses>(new Action<Houses>(this.attach_Houses), new Action<Houses>(this.detach_Houses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOUSESTID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int HOUSESTID
		{
			get
			{
				return this._HOUSESTID;
			}
			set
			{
				if ((this._HOUSESTID != value))
				{
					this.OnHOUSESTIDChanging(value);
					this.SendPropertyChanging();
					this._HOUSESTID = value;
					this.SendPropertyChanged("HOUSESTID");
					this.OnHOUSESTIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HouseStateStatuses_DellHouses", Storage="_DellHouses", ThisKey="HOUSESTID", OtherKey="STRSTATUS")]
		public EntitySet<DellHouses> DellHouses
		{
			get
			{
				return this._DellHouses;
			}
			set
			{
				this._DellHouses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HouseStateStatuses_Houses", Storage="_Houses", ThisKey="HOUSESTID", OtherKey="STRSTATUS")]
		public EntitySet<Houses> Houses
		{
			get
			{
				return this._Houses;
			}
			set
			{
				this._Houses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.HouseStateStatuses = this;
		}
		
		private void detach_DellHouses(DellHouses entity)
		{
			this.SendPropertyChanging();
			entity.HouseStateStatuses = null;
		}
		
		private void attach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.HouseStateStatuses = this;
		}
		
		private void detach_Houses(Houses entity)
		{
			this.SendPropertyChanging();
			entity.HouseStateStatuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IntervalStatuses")]
	public partial class IntervalStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _INTVSTATID;
		
		private string _NAME;
		
		private EntitySet<DellHouseIntervals> _DellHouseIntervals;
		
		private EntitySet<HouseIntervals> _HouseIntervals;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnINTVSTATIDChanging(int value);
    partial void OnINTVSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public IntervalStatuses()
		{
			this._DellHouseIntervals = new EntitySet<DellHouseIntervals>(new Action<DellHouseIntervals>(this.attach_DellHouseIntervals), new Action<DellHouseIntervals>(this.detach_DellHouseIntervals));
			this._HouseIntervals = new EntitySet<HouseIntervals>(new Action<HouseIntervals>(this.attach_HouseIntervals), new Action<HouseIntervals>(this.detach_HouseIntervals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INTVSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int INTVSTATID
		{
			get
			{
				return this._INTVSTATID;
			}
			set
			{
				if ((this._INTVSTATID != value))
				{
					this.OnINTVSTATIDChanging(value);
					this.SendPropertyChanging();
					this._INTVSTATID = value;
					this.SendPropertyChanged("INTVSTATID");
					this.OnINTVSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(60) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntervalStatuses_DellHouseIntervals", Storage="_DellHouseIntervals", ThisKey="INTVSTATID", OtherKey="INTSTATUS")]
		public EntitySet<DellHouseIntervals> DellHouseIntervals
		{
			get
			{
				return this._DellHouseIntervals;
			}
			set
			{
				this._DellHouseIntervals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="IntervalStatuses_HouseIntervals", Storage="_HouseIntervals", ThisKey="INTVSTATID", OtherKey="INTSTATUS")]
		public EntitySet<HouseIntervals> HouseIntervals
		{
			get
			{
				return this._HouseIntervals;
			}
			set
			{
				this._HouseIntervals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DellHouseIntervals(DellHouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.IntervalStatuses = this;
		}
		
		private void detach_DellHouseIntervals(DellHouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.IntervalStatuses = null;
		}
		
		private void attach_HouseIntervals(HouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.IntervalStatuses = this;
		}
		
		private void detach_HouseIntervals(HouseIntervals entity)
		{
			this.SendPropertyChanging();
			entity.IntervalStatuses = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Landmarks")]
	public partial class Landmarks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LANDID;
		
		private System.Guid _LANDGUID;
		
		private System.Guid _AOGUID;
		
		private string _LOCATION;
		
		private string _POSTALCODE;
		
		private string _IFNSFL;
		
		private string _TERRIFNSFL;
		
		private string _IFNSUL;
		
		private string _TERRIFNSUL;
		
		private string _OKATO;
		
		private string _OKTMO;
		
		private System.DateTime _UPDATEDATE;
		
		private System.DateTime _STARTDATE;
		
		private System.DateTime _ENDDATE;
		
		private System.Nullable<System.Guid> _NORMDOC;
		
		private EntityRef<AddressObjectsAllKey> _AddressObjectsAllKey;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLANDIDChanging(System.Guid value);
    partial void OnLANDIDChanged();
    partial void OnLANDGUIDChanging(System.Guid value);
    partial void OnLANDGUIDChanged();
    partial void OnAOGUIDChanging(System.Guid value);
    partial void OnAOGUIDChanged();
    partial void OnLOCATIONChanging(string value);
    partial void OnLOCATIONChanged();
    partial void OnPOSTALCODEChanging(string value);
    partial void OnPOSTALCODEChanged();
    partial void OnIFNSFLChanging(string value);
    partial void OnIFNSFLChanged();
    partial void OnTERRIFNSFLChanging(string value);
    partial void OnTERRIFNSFLChanged();
    partial void OnIFNSULChanging(string value);
    partial void OnIFNSULChanged();
    partial void OnTERRIFNSULChanging(string value);
    partial void OnTERRIFNSULChanged();
    partial void OnOKATOChanging(string value);
    partial void OnOKATOChanged();
    partial void OnOKTMOChanging(string value);
    partial void OnOKTMOChanged();
    partial void OnUPDATEDATEChanging(System.DateTime value);
    partial void OnUPDATEDATEChanged();
    partial void OnSTARTDATEChanging(System.DateTime value);
    partial void OnSTARTDATEChanged();
    partial void OnENDDATEChanging(System.DateTime value);
    partial void OnENDDATEChanged();
    partial void OnNORMDOCChanging(System.Nullable<System.Guid> value);
    partial void OnNORMDOCChanged();
    #endregion
		
		public Landmarks()
		{
			this._AddressObjectsAllKey = default(EntityRef<AddressObjectsAllKey>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANDID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LANDID
		{
			get
			{
				return this._LANDID;
			}
			set
			{
				if ((this._LANDID != value))
				{
					this.OnLANDIDChanging(value);
					this.SendPropertyChanging();
					this._LANDID = value;
					this.SendPropertyChanged("LANDID");
					this.OnLANDIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LANDGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid LANDGUID
		{
			get
			{
				return this._LANDGUID;
			}
			set
			{
				if ((this._LANDGUID != value))
				{
					this.OnLANDGUIDChanging(value);
					this.SendPropertyChanging();
					this._LANDGUID = value;
					this.SendPropertyChanged("LANDGUID");
					this.OnLANDGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AOGUID
		{
			get
			{
				return this._AOGUID;
			}
			set
			{
				if ((this._AOGUID != value))
				{
					if (this._AddressObjectsAllKey.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAOGUIDChanging(value);
					this.SendPropertyChanging();
					this._AOGUID = value;
					this.SendPropertyChanged("AOGUID");
					this.OnAOGUIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LOCATION", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string LOCATION
		{
			get
			{
				return this._LOCATION;
			}
			set
			{
				if ((this._LOCATION != value))
				{
					this.OnLOCATIONChanging(value);
					this.SendPropertyChanging();
					this._LOCATION = value;
					this.SendPropertyChanged("LOCATION");
					this.OnLOCATIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_POSTALCODE", DbType="NChar(10)")]
		public string POSTALCODE
		{
			get
			{
				return this._POSTALCODE;
			}
			set
			{
				if ((this._POSTALCODE != value))
				{
					this.OnPOSTALCODEChanging(value);
					this.SendPropertyChanging();
					this._POSTALCODE = value;
					this.SendPropertyChanged("POSTALCODE");
					this.OnPOSTALCODEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSFL", DbType="NChar(10)")]
		public string IFNSFL
		{
			get
			{
				return this._IFNSFL;
			}
			set
			{
				if ((this._IFNSFL != value))
				{
					this.OnIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._IFNSFL = value;
					this.SendPropertyChanged("IFNSFL");
					this.OnIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSFL", DbType="NChar(10)")]
		public string TERRIFNSFL
		{
			get
			{
				return this._TERRIFNSFL;
			}
			set
			{
				if ((this._TERRIFNSFL != value))
				{
					this.OnTERRIFNSFLChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSFL = value;
					this.SendPropertyChanged("TERRIFNSFL");
					this.OnTERRIFNSFLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IFNSUL", DbType="NChar(10)")]
		public string IFNSUL
		{
			get
			{
				return this._IFNSUL;
			}
			set
			{
				if ((this._IFNSUL != value))
				{
					this.OnIFNSULChanging(value);
					this.SendPropertyChanging();
					this._IFNSUL = value;
					this.SendPropertyChanged("IFNSUL");
					this.OnIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TERRIFNSUL", DbType="NChar(10)")]
		public string TERRIFNSUL
		{
			get
			{
				return this._TERRIFNSUL;
			}
			set
			{
				if ((this._TERRIFNSUL != value))
				{
					this.OnTERRIFNSULChanging(value);
					this.SendPropertyChanging();
					this._TERRIFNSUL = value;
					this.SendPropertyChanged("TERRIFNSUL");
					this.OnTERRIFNSULChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKATO", DbType="NChar(11)")]
		public string OKATO
		{
			get
			{
				return this._OKATO;
			}
			set
			{
				if ((this._OKATO != value))
				{
					this.OnOKATOChanging(value);
					this.SendPropertyChanging();
					this._OKATO = value;
					this.SendPropertyChanged("OKATO");
					this.OnOKATOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OKTMO", DbType="NChar(10)")]
		public string OKTMO
		{
			get
			{
				return this._OKTMO;
			}
			set
			{
				if ((this._OKTMO != value))
				{
					this.OnOKTMOChanging(value);
					this.SendPropertyChanging();
					this._OKTMO = value;
					this.SendPropertyChanged("OKTMO");
					this.OnOKTMOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UPDATEDATE", DbType="DateTime NOT NULL")]
		public System.DateTime UPDATEDATE
		{
			get
			{
				return this._UPDATEDATE;
			}
			set
			{
				if ((this._UPDATEDATE != value))
				{
					this.OnUPDATEDATEChanging(value);
					this.SendPropertyChanging();
					this._UPDATEDATE = value;
					this.SendPropertyChanged("UPDATEDATE");
					this.OnUPDATEDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STARTDATE", DbType="DateTime NOT NULL")]
		public System.DateTime STARTDATE
		{
			get
			{
				return this._STARTDATE;
			}
			set
			{
				if ((this._STARTDATE != value))
				{
					this.OnSTARTDATEChanging(value);
					this.SendPropertyChanging();
					this._STARTDATE = value;
					this.SendPropertyChanged("STARTDATE");
					this.OnSTARTDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ENDDATE", DbType="DateTime NOT NULL")]
		public System.DateTime ENDDATE
		{
			get
			{
				return this._ENDDATE;
			}
			set
			{
				if ((this._ENDDATE != value))
				{
					this.OnENDDATEChanging(value);
					this.SendPropertyChanging();
					this._ENDDATE = value;
					this.SendPropertyChanged("ENDDATE");
					this.OnENDDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOC", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> NORMDOC
		{
			get
			{
				return this._NORMDOC;
			}
			set
			{
				if ((this._NORMDOC != value))
				{
					this.OnNORMDOCChanging(value);
					this.SendPropertyChanging();
					this._NORMDOC = value;
					this.SendPropertyChanged("NORMDOC");
					this.OnNORMDOCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AddressObjectsAllKey_Landmarks", Storage="_AddressObjectsAllKey", ThisKey="AOGUID", OtherKey="AOGUID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public AddressObjectsAllKey AddressObjectsAllKey
		{
			get
			{
				return this._AddressObjectsAllKey.Entity;
			}
			set
			{
				AddressObjectsAllKey previousValue = this._AddressObjectsAllKey.Entity;
				if (((previousValue != value) 
							|| (this._AddressObjectsAllKey.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AddressObjectsAllKey.Entity = null;
						previousValue.Landmarks.Remove(this);
					}
					this._AddressObjectsAllKey.Entity = value;
					if ((value != null))
					{
						value.Landmarks.Add(this);
						this._AOGUID = value.AOGUID;
					}
					else
					{
						this._AOGUID = default(System.Guid);
					}
					this.SendPropertyChanged("AddressObjectsAllKey");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativeDocument")]
	public partial class NormativeDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _NORMDOCID;
		
		private string _DOCNAME;
		
		private System.Nullable<System.DateTime> _DOCDATE;
		
		private string _DOCNUM;
		
		private int _DOCTYPE;
		
		private System.Nullable<int> _DOCIMGID;
		
		private EntityRef<NormativeDocumentTypes> _NormativeDocumentTypes;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNORMDOCIDChanging(System.Guid value);
    partial void OnNORMDOCIDChanged();
    partial void OnDOCNAMEChanging(string value);
    partial void OnDOCNAMEChanged();
    partial void OnDOCDATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDOCDATEChanged();
    partial void OnDOCNUMChanging(string value);
    partial void OnDOCNUMChanged();
    partial void OnDOCTYPEChanging(int value);
    partial void OnDOCTYPEChanged();
    partial void OnDOCIMGIDChanging(System.Nullable<int> value);
    partial void OnDOCIMGIDChanged();
    #endregion
		
		public NormativeDocument()
		{
			this._NormativeDocumentTypes = default(EntityRef<NormativeDocumentTypes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NORMDOCID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid NORMDOCID
		{
			get
			{
				return this._NORMDOCID;
			}
			set
			{
				if ((this._NORMDOCID != value))
				{
					this.OnNORMDOCIDChanging(value);
					this.SendPropertyChanging();
					this._NORMDOCID = value;
					this.SendPropertyChanged("NORMDOCID");
					this.OnNORMDOCIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNAME", DbType="VarChar(MAX)")]
		public string DOCNAME
		{
			get
			{
				return this._DOCNAME;
			}
			set
			{
				if ((this._DOCNAME != value))
				{
					this.OnDOCNAMEChanging(value);
					this.SendPropertyChanging();
					this._DOCNAME = value;
					this.SendPropertyChanged("DOCNAME");
					this.OnDOCNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCDATE", DbType="DateTime")]
		public System.Nullable<System.DateTime> DOCDATE
		{
			get
			{
				return this._DOCDATE;
			}
			set
			{
				if ((this._DOCDATE != value))
				{
					this.OnDOCDATEChanging(value);
					this.SendPropertyChanging();
					this._DOCDATE = value;
					this.SendPropertyChanged("DOCDATE");
					this.OnDOCDATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCNUM", DbType="VarChar(20)")]
		public string DOCNUM
		{
			get
			{
				return this._DOCNUM;
			}
			set
			{
				if ((this._DOCNUM != value))
				{
					this.OnDOCNUMChanging(value);
					this.SendPropertyChanging();
					this._DOCNUM = value;
					this.SendPropertyChanged("DOCNUM");
					this.OnDOCNUMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCTYPE", DbType="Int NOT NULL")]
		public int DOCTYPE
		{
			get
			{
				return this._DOCTYPE;
			}
			set
			{
				if ((this._DOCTYPE != value))
				{
					if (this._NormativeDocumentTypes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDOCTYPEChanging(value);
					this.SendPropertyChanging();
					this._DOCTYPE = value;
					this.SendPropertyChanged("DOCTYPE");
					this.OnDOCTYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOCIMGID", DbType="Int")]
		public System.Nullable<int> DOCIMGID
		{
			get
			{
				return this._DOCIMGID;
			}
			set
			{
				if ((this._DOCIMGID != value))
				{
					this.OnDOCIMGIDChanging(value);
					this.SendPropertyChanging();
					this._DOCIMGID = value;
					this.SendPropertyChanged("DOCIMGID");
					this.OnDOCIMGIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NormativeDocumentTypes_NormativeDocument", Storage="_NormativeDocumentTypes", ThisKey="DOCTYPE", OtherKey="NDTYPEID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public NormativeDocumentTypes NormativeDocumentTypes
		{
			get
			{
				return this._NormativeDocumentTypes.Entity;
			}
			set
			{
				NormativeDocumentTypes previousValue = this._NormativeDocumentTypes.Entity;
				if (((previousValue != value) 
							|| (this._NormativeDocumentTypes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NormativeDocumentTypes.Entity = null;
						previousValue.NormativeDocument.Remove(this);
					}
					this._NormativeDocumentTypes.Entity = value;
					if ((value != null))
					{
						value.NormativeDocument.Add(this);
						this._DOCTYPE = value.NDTYPEID;
					}
					else
					{
						this._DOCTYPE = default(int);
					}
					this.SendPropertyChanged("NormativeDocumentTypes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NormativeDocumentTypes")]
	public partial class NormativeDocumentTypes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NDTYPEID;
		
		private string _NAME;
		
		private EntitySet<DellNormativeDocument> _DellNormativeDocument;
		
		private EntitySet<NormativeDocument> _NormativeDocument;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNDTYPEIDChanging(int value);
    partial void OnNDTYPEIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public NormativeDocumentTypes()
		{
			this._DellNormativeDocument = new EntitySet<DellNormativeDocument>(new Action<DellNormativeDocument>(this.attach_DellNormativeDocument), new Action<DellNormativeDocument>(this.detach_DellNormativeDocument));
			this._NormativeDocument = new EntitySet<NormativeDocument>(new Action<NormativeDocument>(this.attach_NormativeDocument), new Action<NormativeDocument>(this.detach_NormativeDocument));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDTYPEID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NDTYPEID
		{
			get
			{
				return this._NDTYPEID;
			}
			set
			{
				if ((this._NDTYPEID != value))
				{
					this.OnNDTYPEIDChanging(value);
					this.SendPropertyChanging();
					this._NDTYPEID = value;
					this.SendPropertyChanged("NDTYPEID");
					this.OnNDTYPEIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NormativeDocumentTypes_DellNormativeDocument", Storage="_DellNormativeDocument", ThisKey="NDTYPEID", OtherKey="DOCTYPE")]
		public EntitySet<DellNormativeDocument> DellNormativeDocument
		{
			get
			{
				return this._DellNormativeDocument;
			}
			set
			{
				this._DellNormativeDocument.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NormativeDocumentTypes_NormativeDocument", Storage="_NormativeDocument", ThisKey="NDTYPEID", OtherKey="DOCTYPE")]
		public EntitySet<NormativeDocument> NormativeDocument
		{
			get
			{
				return this._NormativeDocument;
			}
			set
			{
				this._NormativeDocument.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DellNormativeDocument(DellNormativeDocument entity)
		{
			this.SendPropertyChanging();
			entity.NormativeDocumentTypes = this;
		}
		
		private void detach_DellNormativeDocument(DellNormativeDocument entity)
		{
			this.SendPropertyChanging();
			entity.NormativeDocumentTypes = null;
		}
		
		private void attach_NormativeDocument(NormativeDocument entity)
		{
			this.SendPropertyChanging();
			entity.NormativeDocumentTypes = this;
		}
		
		private void detach_NormativeDocument(NormativeDocument entity)
		{
			this.SendPropertyChanging();
			entity.NormativeDocumentTypes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OperationStatuses")]
	public partial class OperationStatuses : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _OPERSTATID;
		
		private string _NAME;
		
		private EntitySet<AddressObjects> _AddressObjects;
		
		private EntitySet<DellAddressObjects> _DellAddressObjects;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOPERSTATIDChanging(int value);
    partial void OnOPERSTATIDChanged();
    partial void OnNAMEChanging(string value);
    partial void OnNAMEChanged();
    #endregion
		
		public OperationStatuses()
		{
			this._AddressObjects = new EntitySet<AddressObjects>(new Action<AddressObjects>(this.attach_AddressObjects), new Action<AddressObjects>(this.detach_AddressObjects));
			this._DellAddressObjects = new EntitySet<DellAddressObjects>(new Action<DellAddressObjects>(this.attach_DellAddressObjects), new Action<DellAddressObjects>(this.detach_DellAddressObjects));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OPERSTATID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int OPERSTATID
		{
			get
			{
				return this._OPERSTATID;
			}
			set
			{
				if ((this._OPERSTATID != value))
				{
					this.OnOPERSTATIDChanging(value);
					this.SendPropertyChanging();
					this._OPERSTATID = value;
					this.SendPropertyChanged("OPERSTATID");
					this.OnOPERSTATIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string NAME
		{
			get
			{
				return this._NAME;
			}
			set
			{
				if ((this._NAME != value))
				{
					this.OnNAMEChanging(value);
					this.SendPropertyChanging();
					this._NAME = value;
					this.SendPropertyChanged("NAME");
					this.OnNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatuses_AddressObjects", Storage="_AddressObjects", ThisKey="OPERSTATID", OtherKey="OPERSTATUS")]
		public EntitySet<AddressObjects> AddressObjects
		{
			get
			{
				return this._AddressObjects;
			}
			set
			{
				this._AddressObjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OperationStatuses_DellAddressObjects", Storage="_DellAddressObjects", ThisKey="OPERSTATID", OtherKey="OPERSTATUS")]
		public EntitySet<DellAddressObjects> DellAddressObjects
		{
			get
			{
				return this._DellAddressObjects;
			}
			set
			{
				this._DellAddressObjects.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatuses = this;
		}
		
		private void detach_AddressObjects(AddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatuses = null;
		}
		
		private void attach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatuses = this;
		}
		
		private void detach_DellAddressObjects(DellAddressObjects entity)
		{
			this.SendPropertyChanging();
			entity.OperationStatuses = null;
		}
	}
}
#pragma warning restore 1591
